{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/_services/alert.service.ts","./src/_services/auth.guard.ts","./src/_services/base.ts","./src/_services/error.interceptor.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/material.module.ts","./src/app/reducers/index.ts","./src/auth/auth.module.ts","./src/auth/components/changePassword/changePassword.component.ts","./src/auth/components/changePassword/changePassword.component.html","./src/auth/components/login/login.component.ts","./src/auth/components/login/login.component.html","./src/auth/services/auth.service.ts","./src/auth/store/auth.actions.ts","./src/auth/store/index.ts","./src/environments/environment.ts","./src/header/header.component.ts","./src/header/header.component.html","./src/home/home.component.ts","./src/home/home.component.html","./src/main.ts","./src/menu/components/menu-add/menu-add.component.ts","./src/menu/components/menu-add/menu-add.component.html","./src/menu/components/menu-delete/menu-delete.component.ts","./src/menu/components/menu-delete/menu-delete.component.html","./src/menu/components/menu-list/menu-list.component.ts","./src/menu/components/menu-list/menu-list.component.html","./src/menu/menu.module.ts","./src/menu/services/menu.service.ts","./src/role/components/list/list-role.component.ts","./src/role/components/list/list-role.component.html","./src/role/role.module.ts","./src/role/services/role.service.ts","./src/user/components/add/add-user.component.ts","./src/user/components/add/add-user.component.html","./src/user/components/delete/delete-user.component.ts","./src/user/components/delete/delete-user.component.html","./src/user/components/list/list-user.component.ts","./src/user/components/list/list-user.component.html","./src/user/components/view/view-user.component.ts","./src/user/components/view/view-user.component.html","./src/user/services/user.service.ts","./src/user/user.module.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\nimport { MatSnackBar, MatSnackBarVerticalPosition, MatSnackBarHorizontalPosition } from '@angular/material/snack-bar';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AlertService {\n\n  constructor(private snackBar: MatSnackBar) { }\n\n  horizontalPosition: MatSnackBarHorizontalPosition = 'center';\n  verticalPosition: MatSnackBarVerticalPosition = 'top';\n\n  showAlert(message: string, action: string = '', displayDuration: number = 2000, isError: boolean = false) {\n    this.snackBar.open(message, action, {\n      duration: displayDuration,\n      horizontalPosition: this.horizontalPosition,\n      verticalPosition: this.verticalPosition,\n      panelClass: isError ? ['error-snackbar'] : ['message-snackbar']\n    });\n  }\n\n}\n","import { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { Injectable } from '@angular/core';\nimport { AuthService } from '../auth/services/auth.service';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n\n    constructor(private router: Router, private authService: AuthService) { }\n\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n        if (this.authService.loggedIn()) {\n            return true;\n        } else {\n            this.router.navigate(['/login']);\n        }\n    }\n\n}\n","import { HttpParams } from '@angular/common/http';\nimport { IParam } from 'src/_models/param';\n\nexport class Base {\n\n    getHttpParams(parameters: IParam): HttpParams {\n        let httpParams = new HttpParams();\n\n        if (parameters.pageNumber) {\n            if (parameters.pageNumber === 0) {\n                parameters.pageNumber = 1;\n            }\n            httpParams = httpParams.set('pageNumber', parameters.pageNumber.toString());\n        }\n        if (parameters.pageSize) {\n            if (parameters.pageSize === 0) {\n                parameters.pageSize = 50;\n            }\n            httpParams = httpParams.set('pageSize', parameters.pageSize.toString());\n        }\n        if (parameters.searchBy) {\n            httpParams = httpParams.set('searchBy', parameters.searchBy || '');\n        }\n        if (parameters.searchText) {\n            httpParams = httpParams.set('searchText', parameters.searchText);\n        }\n        if (parameters.sortBy) {\n            httpParams = httpParams.set('sortBy', parameters.sortBy);\n        }\n        if (parameters.sortDirection) {\n            httpParams = httpParams.set('sortDirection', parameters.sortDirection);\n        }\n\n        return httpParams;\n    }\n}\n","import { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent, HttpErrorResponse, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { catchError } from 'rxjs/operators';\nimport { throwError } from 'rxjs';\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n    intercept(\n        req: HttpRequest<any>,\n        next: HttpHandler\n    ): import('rxjs').Observable<HttpEvent<any>> {\n        return next.handle(req).pipe(\n            catchError(error => {\n                if (error.status === 401) {\n                    return throwError(error.statusText);\n                }\n\n                if (error instanceof HttpErrorResponse) {\n                    const applicationError = error.headers.get('Application-Error');\n                    if (applicationError) {\n                        throwError(applicationError);\n                    }\n\n                    const serverError = error.error;\n                    let modelStateError = '';\n                    if (serverError && typeof serverError === 'object') {\n                        for (const key in serverError.errors) {\n                            if (serverError.errors[key]) {\n                                modelStateError += serverError.errors[key] + '\\n';\n                            }\n                        }\n                    }\n                    return throwError(modelStateError || serverError || 'Server Error');\n                }\n            })\n        );\n    }\n}\n\nexport const ErrorInterceptorProvider = {\n    provide: HTTP_INTERCEPTORS,\n    useClass: ErrorInterceptor,\n    multi: true\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from 'src/home/home.component';\nimport { AuthGuard } from 'src/_services/auth.guard';\nimport { AddUserComponent } from 'src/user/components/add/add-user.component';\nimport { ListUserComponent } from 'src/user/components/list/list-user.component';\nimport { LoginComponent } from 'src/auth/components/login/login.component';\nimport { ListRoleComponent } from 'src/role/components/list/list-role.component';\nimport { MenuListComponent } from 'src/menu/components/menu-list/menu-list.component';\nimport { MenuAddComponent } from 'src/menu/components/menu-add/menu-add.component';\n\nconst routes: Routes = [\n    { path: '', component: HomeComponent },\n    { path: 'home', component: HomeComponent },\n    { path: 'addUser', component: AddUserComponent, canActivate: [AuthGuard] },\n    { path: 'addUser/:id', component: AddUserComponent, canActivate: [AuthGuard] },\n    { path: 'user', component: ListUserComponent, canActivate: [AuthGuard] },\n    { path: 'role', component: ListRoleComponent, canActivate: [AuthGuard] },\n    { path: 'menu', component: MenuListComponent, canActivate: [AuthGuard] },\n    { path: 'addMenu', component: MenuAddComponent, canActivate: [AuthGuard] },\n    { path: 'addMenu/:id', component: MenuAddComponent, canActivate: [AuthGuard] },\n    { path: 'login', component: LoginComponent }\n];\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes)],\n    exports: [RouterModule],\n    providers: [AuthGuard]\n})\nexport class AppRoutingModule { }\n","import { Component, ViewChild, OnInit, OnDestroy, AfterContentInit } from '@angular/core';\nimport { MatAccordion } from '@angular/material/expansion/accordion';\nimport { AuthService } from 'src/auth/services/auth.service';\nimport { Observable } from 'rxjs';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ChangePasswordComponent } from 'src/auth/components/changePassword/changePassword.component';\nimport { LoginState, selectIsAuthenticated, selectAuthenticatedUser } from 'src/auth/store';\nimport { Store, select } from '@ngrx/store';\nimport { IMenu } from 'src/_models/menu-data';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements AfterContentInit {\n\n  private hideTitle = false;\n\n  @ViewChild('accordion', { static: true }) Accordion: MatAccordion;\n\n  myMenu: IMenu[];\n\n  isAuthenticated$: Observable<boolean>;\n  usernameToDisplay$: Observable<string>;\n\n  constructor(\n    private authService: AuthService,\n    private matDialog: MatDialog,\n    private store: Store<LoginState>) { }\n\n  ngAfterContentInit(): void {\n    this.isAuthenticated$ = this.store.pipe(select(selectIsAuthenticated));\n    this.usernameToDisplay$ = this.store.pipe(select(selectAuthenticatedUser));\n\n    this.isAuthenticated$.subscribe((isAuthenticated) => {\n      console.log('isAuthenticated', isAuthenticated);\n      if (isAuthenticated) {\n        this.authService.getCurrentUserMenu().subscribe((menus) => {\n          console.log('menus', menus);\n          this.myMenu = menus;\n        })\n      }\n    })\n  }\n\n  onSignOut() {\n    this.authService.logout();\n  }\n\n  onChangePassword(): void {\n    const dialogRef = this.matDialog.open(ChangePasswordComponent, { width: '300px' });\n\n    dialogRef.afterClosed().subscribe(result => {\n      console.log(result);\n    });\n  }\n}\n","<mat-toolbar color=\"primary\">\n  <div fxFlex\n       fxLayout=\"row\"\n       fxLayoutGap=\"10px\">\n    <div><i class=\"fa fa-bars\"\n         (click)=\"sidenav.toggle()\"></i></div>\n    <div> <a routerLink=\"/\">AMS</a></div>\n  </div>\n  <div fxFlex\n       fxLayout\n       fxLayoutAlign=\"flex-end\">\n    <ul fxLayout\n        fxLayoutGap=\"16px\"\n        class=\"navigation-items\">\n      <li *ngIf=\"!!(isAuthenticated$ | async)\">Welcome {{(usernameToDisplay$ | async).toUpperCase()}}</li>\n      <li *ngIf=\"!!(isAuthenticated$ | async)\"\n          (click)=\"onChangePassword()\"\n          matTooltip=\"Change Password\"><i class=\"fa fa-key\"></i></li>\n      <li><a routerLink=\"/login\"\n           *ngIf=\"!(isAuthenticated$ | async)\"\n           matTooltip=\"Sign In\">Sign In <i class=\"fa fa-sign-in\"></i></a></li>\n      <li><a routerLink=\"/login\"\n           (click)=\"onSignOut()\"\n           *ngIf=\"!!(isAuthenticated$ | async)\"\n           matTooltip=\"Sign Out\"><i class=\"fa fa-sign-out\"></i></a></li>\n    </ul>\n  </div>\n</mat-toolbar>\n<mat-drawer-container autosize>\n  <mat-drawer #sidenav\n              role=\"heading\"\n              mode=\"side\"\n              opened>\n    <mat-nav-list *ngIf=\"!!(isAuthenticated$ | async)\">\n      <mat-accordion displayMode=\"flat\"\n                     multi=\"true\"\n                     #accordion=\"matAccordion\">\n        <div *ngFor=\"let menu of myMenu\">\n          <div *ngIf=\"menu.subMenu?.length === 0\">\n            <a mat-list-item\n               [routerLink]=\"menu.link\"> <i [class]=\"menu.iconName\"></i><span\n                    class=\"mat-list-item-text\">{{menu.title}}</span></a>\n          </div>\n          <div *ngIf=\"menu.subMenu?.length > 0\">\n            <mat-expansion-panel [expanded]=\"menu.isExpanded\">\n              <mat-expansion-panel-header>\n                <mat-panel-title>\n                  <i [class]=\"menu.iconName\"></i><span class=\"mat-list-item-text\">{{menu.title}}</span>\n                </mat-panel-title>\n              </mat-expansion-panel-header>\n              <mat-list>\n                <a [routerLink]=\"item.link\" mat-list-item *ngFor=\"let item of menu.subMenu\">\n                  <i [class]=\"item.iconName\"></i><span class=\"mat-list-item-text subMenu\">{{item.title}}</span> </a>\n              </mat-list>\n            </mat-expansion-panel>\n          </div>\n        </div>\n      </mat-accordion>\n    </mat-nav-list>\n  </mat-drawer>\n  <mat-drawer-content>\n    <main>\n      <router-outlet></router-outlet>\n    </main>\n  </mat-drawer-content>\n</mat-drawer-container>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { JwtModule } from '@auth0/angular-jwt';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { HttpClientModule } from '@angular/common/http';\nimport { StoreModule } from '@ngrx/store';\n\n\nimport { MaterialModule } from 'src/app/material.module';\nimport { AppRoutingModule } from 'src/app/app-routing.module';\nimport { AppComponent } from 'src/app/app.component';\nimport { HomeComponent } from 'src/home/home.component';\nimport { HeaderComponent } from 'src/header/header.component';\nimport { AuthService } from 'src/auth/services/auth.service';\nimport { AlertService } from 'src/_services/alert.service';\nimport { ErrorInterceptorProvider } from 'src/_services/error.interceptor';\nimport { reducers, metaReducers } from './reducers';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\nimport { environment } from '../environments/environment';\nimport { UserModule } from 'src/user/user.module';\nimport { AuthModule } from 'src/auth/auth.module';\nimport { RoleModule } from 'src/role/role.module';\nimport { MenuModule } from 'src/menu/menu.module';\n\n@NgModule({\n   declarations: [\n      AppComponent,\n      HomeComponent,\n      HeaderComponent,\n   ],\n   imports: [\n      BrowserModule,\n      ReactiveFormsModule,\n      BrowserAnimationsModule,\n      MaterialModule,\n      AppRoutingModule,\n      FlexLayoutModule,\n      HttpClientModule,\n      AuthModule,\n      UserModule,\n      RoleModule,\n      MenuModule,\n      JwtModule.forRoot({\n         config: {\n            tokenGetter: getToken,\n            whitelistedDomains: ['localhost:5000'],\n            blacklistedRoutes: []\n         }\n      }),\n      StoreModule.forRoot(reducers, {\n         metaReducers,\n         runtimeChecks: {\n            strictStateImmutability: true,\n            strictActionImmutability: true,\n         },\n      }),\n      StoreDevtoolsModule.instrument({ maxAge: 25, logOnly: environment.production })\n   ],\n   providers: [\n      AuthService, AlertService, ErrorInterceptorProvider\n   ],\n   bootstrap: [\n      AppComponent\n   ]\n})\nexport class AppModule { }\n\nexport function getToken() {\n   return localStorage.getItem('token');\n}\n","import { NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatListModule } from '@angular/material/list';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport {MatCardModule} from '@angular/material/card';\n\n@NgModule({\n  imports: [MatButtonModule, MatInputModule,\n    MatFormFieldModule, MatDatepickerModule,\n    MatNativeDateModule, MatCheckboxModule,\n    MatSelectModule, MatSidenavModule,\n    MatToolbarModule, MatListModule,\n    MatExpansionModule, MatMenuModule,\n    MatTableModule, MatPaginatorModule,\n    MatSortModule, MatSnackBarModule,\n    MatProgressBarModule, MatTooltipModule,\n    MatDialogModule, MatCardModule],\n  exports: [MatButtonModule, MatInputModule,\n    MatFormFieldModule, MatDatepickerModule,\n    MatNativeDateModule, MatCheckboxModule,\n    MatSelectModule, MatSidenavModule,\n    MatToolbarModule, MatListModule,\n    MatExpansionModule, MatMenuModule,\n    MatTableModule, MatPaginatorModule,\n    MatSortModule, MatSnackBarModule,\n    MatProgressBarModule, MatTooltipModule,\n    MatDialogModule, MatCardModule]\n})\nexport class MaterialModule { }\n","import {\n  ActionReducer,\n  ActionReducerMap,\n  createFeatureSelector,\n  createSelector,\n  MetaReducer\n} from '@ngrx/store';\nimport { environment } from '../../environments/environment';\n\n\nexport interface AMSState {\n\n}\n\nexport const reducers: ActionReducerMap<AMSState> = {\n\n};\n\n\nexport const metaReducers: MetaReducer<AMSState>[] = !environment.production ? [] : [];\n","import { NgModule } from '@angular/core';\nimport { LoginComponent } from './components/login/login.component';\nimport { ChangePasswordComponent } from './components/changePassword/changePassword.component';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MaterialModule } from 'src/app/material.module';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { StoreModule } from '@ngrx/store';\nimport * as fromLoginState from './store';\n\n@NgModule({\n    declarations: [\n        LoginComponent,\n        ChangePasswordComponent\n    ],\n    imports: [CommonModule,\n        RouterModule,\n        ReactiveFormsModule,\n        MaterialModule,\n        FlexLayoutModule,\n        StoreModule.forFeature(\n            fromLoginState.loginStateFeatureKey,\n            fromLoginState.reducers, {\n            metaReducers: fromLoginState.metaReducers\n        })],\n    entryComponents: [\n        ChangePasswordComponent],\n    exports: [\n        LoginComponent,\n        ChangePasswordComponent\n    ]\n})\n\nexport class AuthModule {\n}\n","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { AuthService } from 'src/auth/services/auth.service';\nimport { FormGroup, FormControl, Validators, ValidatorFn, ValidationErrors } from '@angular/forms';\nimport { AppComponent } from 'src/app/app.component';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { UserService } from 'src/user/services/user.service';\nimport { AlertService } from 'src/_services/alert.service';\n\n\n@Component({\n  selector: 'app-change-password',\n  templateUrl: './changePassword.component.html',\n  styleUrls: ['./changePassword.component.css']\n})\nexport class ChangePasswordComponent implements OnInit {\n\n\n  changePasswordForm: FormGroup;\n\n  constructor(\n    private userService: UserService,\n    private authService: AuthService,\n    private alertService: AlertService,\n    public dialogRef: MatDialogRef<AppComponent>) { }\n\n  ngOnInit() {\n    this.changePasswordForm = new FormGroup({\n      oldPassword: new FormControl('', [Validators.required]),\n      newPassword: new FormControl('', [Validators.required]),\n      confirmedNewPassword: new FormControl('', [Validators.required])\n    }, { validators: passwordCompareValidator });\n  }\n\n  onSubmit() {\n    this.userService.changePassword({\n      oldPassword: this.changePasswordForm.get('oldPassword').value,\n      newPassword: this.changePasswordForm.get('newPassword').value,\n      username: this.authService.currentUser.username\n    }).subscribe(\n      (data) => {\n        this.alertService.showAlert('Password changed successfully.');\n        this.dialogRef.close({ changed: true });\n      },\n      (error) => {\n        this.alertService.showAlert(error);\n      });\n  }\n}\n\nexport const passwordCompareValidator: ValidatorFn =\n  (control: FormGroup): ValidationErrors | null => {\n    const newPassword = control.get('newPassword');\n    const confirmedNewPassword = control.get('confirmedNewPassword');\n    if (newPassword.value !== confirmedNewPassword.value) {\n      return { passwordCompare: true };\n    }\n    return null;\n  }","<section>\n  <form [formGroup]='changePasswordForm'\n        (ngSubmit)=\"onSubmit()\"\n        fxLayout=\"column\"\n        fxLayoutAlign=\"space-between center\"\n        fxLayoutGap=\"10px\">\n    <mat-form-field>\n      <input type=\"text\"\n             #oldPassword\n             formControlName='oldPassword'\n             placeholder=\"Old Password\"\n             matInput>\n      <mat-error *ngIf=\"!changePasswordForm.get('oldPassword').valid && changePasswordForm.get('oldPassword').touched\">\n        <mat-error *ngIf=\"changePasswordForm.get('oldPassword').errors['required']\">Username is required.</mat-error>\n      </mat-error>\n    </mat-form-field>\n    <mat-form-field>\n      <input type=\"password\"\n             #newPassword\n             formControlName='newPassword'\n             placeholder=\"New Password\"\n             matInput>\n      <mat-error *ngIf=\"!changePasswordForm.get('newPassword').valid && changePasswordForm.get('newPassword').touched\">\n        <mat-error *ngIf=\"changePasswordForm.get('newPassword').errors['required']\">Password is required.</mat-error>\n      </mat-error>\n    </mat-form-field>\n    <mat-form-field>\n      <input type=\"password\"\n             #confirmedNewPassword\n             formControlName='confirmedNewPassword'\n             placeholder=\"Confirmed New Password\"\n             matInput>\n      <mat-error\n                 *ngIf=\"!changePasswordForm.get('confirmedNewPassword').valid && changePasswordForm.get('confirmedNewPassword').touched\">\n        <mat-error *ngIf=\"changePasswordForm.get('confirmedNewPassword').errors['required']\">Password is required.\n        </mat-error>\n      </mat-error>\n    </mat-form-field>\n    <mat-error class=\"message\"\n               *ngIf=\"changePasswordForm.errors?.passwordCompare\">Password does not matched.\n    </mat-error>\n    <div mat-dialog-actions>\n      <button mat-raised-button\n              [disabled]=\"!changePasswordForm.valid\"\n              color=\"primary\"\n              type=\"submit\">Change</button>\n      <button mat-raised-button\n              color=\"accent\"\n              type=\"button\"\n              [mat-dialog-close]=\"false\"\n              cdkFocusInitial>Cancel</button>\n    </div>\n  </form>\n</section>\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { AuthService } from 'src/auth/services/auth.service';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  loginForm: FormGroup;\n\n  constructor(\n    private authService: AuthService) { }\n\n  ngOnInit(): void {\n\n    this.loginForm = new FormGroup({\n      username: new FormControl('sysadmin', [Validators.required]),\n      password: new FormControl('password', [Validators.required])\n    });\n  }\n\n  onSubmit() {\n    if (this.loginForm.valid) {\n      this.authService\n        .login({\n          username: this.loginForm.value.username,\n          password: this.loginForm.value.password\n        });\n    }\n  }\n}\n\n// forbiddenNameValidator(control: FormControl): { [s: string]: boolean } {\n  //   if (this.forbiddenNames.indexOf(control.value) !== -1) {\n  //     return { nameIsForbidden: true };\n  //   }\n  //   return null;\n  // }\n\n  // forbiddenEmailValidatorAsync(control: FormControl): Promise<any> | Observable<any> {\n  //   const prmoise = new Promise((resolve, reject) => {\n  //     setTimeout(() => {\n  //       if (control.value === 'test@test.test') {\n  //         resolve({ emailIsForbidden: true });\n  //       } else {\n  //         resolve(null);\n  //       }\n  //     }, 1500);\n  //   });\n  //   return prmoise;\n  // }\n  //forbiddenNames = ['sa', 'user', 'password', 'username', ' ', '1', 'test'];\n\n  // genders = ['Male', 'Female', 'Unknown'];\n\n  // ngOnInit() {\n\n  //   this.login();\n\n  //   this.loginForm = new FormGroup({\n  //     userData: new FormGroup({\n  //       username: new FormControl(null, [Validators.required, this.forbiddenNameValidator.bind(this)]),\n  //       email: new FormControl('@gmail.com', [Validators.required, Validators.email], this.forbiddenEmailValidatorAsync),\n  //     }),\n  //     gender: new FormControl('Male')\n  //   });\n  // }\n\n  // onSubmit() {\n  //   console.log(this.loginForm);\n  // }\n\n\n\n  // forbiddenEmailValidatorAsync(control: FormControl): Promise<any> | Observable<any> {\n  //   const prmoise = new Promise((resolve, reject) => {\n  //     setTimeout(() => {\n  //       if (control.value === 'test@test.test') {\n  //         resolve({ emailIsForbidden: true });\n  //       } else {\n  //         resolve(null);\n  //       }\n  //     }, 1500);\n  //   });\n  //   return prmoise;\n  // }\n\n  // login() {\n  //   this.authService\n  //     .login({ username: \"pawanrajshakya\", password: \"password\" })\n  //     .subscribe(next => {\n  //       console.log('logged in successfully.')\n  //     }, error => {\n  //       console.error('logged in failed.')\n  //     })\n  // }\n","<section>\n  <form [formGroup]='loginForm'\n        (ngSubmit)=\"onSubmit()\"\n        fxLayout=\"column\"\n        fxLayoutAlign=\"space-between center\"\n        fxLayoutGap=\"10px\">\n    <mat-form-field>\n      <input type=\"text\"\n             #username\n             formControlName='username'\n             placeholder=\"Username\"\n             matInput>\n      <mat-error *ngIf=\"!loginForm.get('username').valid && loginForm.get('username').touched\">\n        <mat-error *ngIf=\"loginForm.get('username').errors['required']\">Username is required.</mat-error>\n      </mat-error>\n    </mat-form-field>\n    <mat-form-field>\n      <input type=\"password\"\n             #password\n             formControlName='password'\n             placeholder=\"Password\"\n             matInput>\n      <mat-error *ngIf=\"!loginForm.get('password').valid && loginForm.get('password').touched\">\n        <mat-error *ngIf=\"loginForm.get('password').errors['required']\">Password is required.</mat-error>\n      </mat-error>\n    </mat-form-field>\n    <div fxLayout=\"row\">\n      <button mat-raised-button\n              [disabled]=\"!loginForm.valid\"\n              color=\"primary\"\n              type=\"submit\">Login</button>\n    </div>\n  </form>\n</section>\n\n<!-- <div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col-xs-12 col-sm-10 col-md-8 col-sm-offset-1 col-md-offset-2\">\n      <form [formGroup]='loginForm'\n            (ngSubmit)=\"onSubmit()\">\n        <div formGroupName=\"userData\">\n          <mat-form-field>\n            <label for=\"username\">Username</label>\n            <input type=\"text\"\n                   id=\"username\"\n                   formControlName='username'\n                   matInput>\n            <span *ngIf=\"!loginForm.get('userData.username').valid && loginForm.get('userData.username').touched\"\n                  class=\"help-block\">\n              <span *ngIf=\"loginForm.get('userData.username').errors['nameIsForbidden']\"\n                    class=\"help-block\">Username is invalid.</span>\n              <span *ngIf=\"loginForm.get('userData.username').errors['required']\"\n                    class=\"help-block\">Username is required.</span>\n            </span>\n          </mat-form-field>\n          <div class=\"form-group\">\n            <label for=\"email\">email</label>\n            <input type=\"text\"\n                   id=\"email\"\n                   formControlName='email'\n                   class=\"form-control\">\n            <div *ngIf=\"!loginForm.get('userData.email').valid && loginForm.get('userData.email').touched\"\n                 class=\"help-block\">Valid email address is required.</div>\n          </div>\n        </div>\n        <div class=\"radio\"\n             *ngFor=\"let gender of genders\">\n          <label>\n            <input type=\"radio\"\n                   formControlName=\"gender\"\n                   [value]=\"gender\">{{ gender }}\n          </label>\n        </div>\n        <button mat-raised-button color=\"primary\"\n                type=\"submit\"><i class=\"fa fa-sign-in\"></i> Submit</button>\n      </form>\n    </div>\n  </div>\n</div> -->\n","import { Injectable, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { Store } from '@ngrx/store';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { Router } from '@angular/router';\n\nimport { IAuthData } from 'src/_models/auth-data';\nimport { environment } from 'src/environments/environment';\nimport { IUser } from 'src/_models/user-data';\nimport { UserService } from '../../user/services/user.service';\n\nimport { AlertService } from '../../_services/alert.service';\nimport { LoginState } from 'src/auth/store';\n\nimport * as fromAction from '../store/auth.actions';\nimport { IMenus, IMenu } from 'src/_models/menu-data';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class AuthService {\n\n  private jwtHelper = new JwtHelperService();\n\n  decodedToken: any;\n\n  private baseUrl = environment.apiUrl;\n\n  currentUser: IUser;\n\n  constructor(\n    private http: HttpClient,\n    private router: Router,\n    private userService: UserService,\n    private alertService: AlertService,\n    private store: Store<LoginState>) {\n    this.loggedIn();\n  }\n\n  login(model: IAuthData) {\n\n    this.store.dispatch(fromAction.loadAuths());\n\n    return this.http.post(this.baseUrl + 'auth/login', model).pipe(\n      map((response: any) => {\n        console.log(response);\n        const user = response;\n        if (user) {\n          localStorage.setItem('token', user.token);\n          this.decodedToken = this.jwtHelper.decodeToken(user.token);\n          this.getCurrentUser(this.decodedToken.nameid);\n          // this.authChange.next(true);\n          this.router.navigate(['/home']);\n          console.log(this.decodedToken);\n        }\n      })\n    ).subscribe(next => {\n      this.alertService.showAlert('logged in successfully.', 'Close');\n      this.store.dispatch(fromAction.loadAuthsSuccess({ data: model }));\n    }, error => {\n      this.alertService.showAlert(error, 'Close', 6000, true);\n      this.store.dispatch(fromAction.loadAuthsFailure({ error }));\n    });\n  }\n\n  loggedIn() {\n    const token = localStorage.getItem('token');\n    if (!this.jwtHelper.isTokenExpired(token)) {\n      this.decodedToken = this.jwtHelper.decodeToken(token);\n      this.getCurrentUser(this.decodedToken.nameid);\n      return true;\n    }\n    this.store.dispatch(fromAction.loadAuthsFailure({ error: 'Token Expired.' }));\n    return false;\n  }\n\n  logout() {\n    this.store.dispatch(fromAction.loadAuthsFailure({ error: 'Logged Out.' }));\n    localStorage.removeItem('token');\n    this.router.navigate(['/login']);\n  }\n\n  getCurrentUser(id: number) {\n    this.userService.getById(id).subscribe((data) => {\n      this.currentUser = data;\n      this.store.dispatch(fromAction.loadAuthsSuccess({ data: { username: this.currentUser.username, password: '' } }));\n      console.log(this.currentUser);\n    });\n  }\n\n  getCurrentUserMenu(){\n    return this.http.get<IMenu[]>(this.baseUrl + 'menu\\\\mymenu');\n  }\n\n}\n","import { createAction, props } from '@ngrx/store';\nimport { IAuthData } from 'src/_models/auth-data';\n\nexport const loadAuths = createAction(\n  '[Auth: Login Component] Load Auths'\n);\n\nexport const loadAuthsSuccess = createAction(\n  '[Auth: Login Component] Load Auths Success',\n  props<{ data: IAuthData }>()\n);\n\nexport const loadAuthsFailure = createAction(\n  '[Auth: Login Component] Load Auths Failure',\n  props<{ error: any }>()\n);\n","import {\n  ActionReducer,\n  ActionReducerMap,\n  createFeatureSelector,\n  createSelector,\n  MetaReducer,\n  createReducer,\n  on\n} from '@ngrx/store';\nimport { environment } from '../../environments/environment';\nimport { IAuthData } from 'src/_models/auth-data';\nimport { loadAuthsSuccess, loadAuthsFailure } from './auth.actions';\n\nexport const loginStateFeatureKey = 'loginState';\n\nexport interface LoginState {\n  isAuthenticated: boolean;\n  data: IAuthData;\n}\n\nexport const initialState: LoginState = { isAuthenticated: false, data: undefined };\n\nexport const reducers = createReducer(\n  initialState,\n  on(loadAuthsSuccess, (state, action) => {\n    return {\n      isAuthenticated: true,\n      data: action.data\n    };\n  }),\n  on(loadAuthsFailure, (state, action) => {\n    return {\n      isAuthenticated: false,\n      data: state.data\n    };\n  })\n);\n\nexport const selectAuthFeature = createFeatureSelector<LoginState>(\n  loginStateFeatureKey\n);\n\nexport const selectIsAuthenticated = createSelector(\n  selectAuthFeature,\n  (state: LoginState) => state.isAuthenticated\n);\n\nexport const selectAuthenticatedUser = createSelector(\n  selectAuthFeature,\n  (state: LoginState) => state.isAuthenticated ? state.data.username : ''\n);\n\nexport const metaReducers: MetaReducer<LoginState>[] = !environment.production ? [] : [];\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: 'http://localhost:5000/api/'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<p>\n  header works!\n</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<p>\n  home works!\n</p>\n","//import 'hammerjs';\n\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { AlertService } from 'src/_services/alert.service';\nimport { IParam } from 'src/_models/param';\nimport { IMenu, IMainMenu, IMenuToSave } from 'src/_models/menu-data';\nimport { MenuService } from 'src/menu/services/menu.service';\nimport { RoleService } from 'src/role/services/role.service';\nimport { IRole } from 'src/_models/role-data';\n\n@Component({\n  selector: 'app-menu-add',\n  templateUrl: './menu-add.component.html',\n  styleUrls: ['./menu-add.component.css']\n})\nexport class MenuAddComponent implements OnInit {\n\n  menuForm: FormGroup;\n\n  roles: IRole[];\n  mainMenus: IMainMenu[] = [{ id: 0, title: 'None' }];\n  menu: IMenu;\n  menuToSave: IMenuToSave;\n  id = 0;\n  roleParam: IParam = {};\n\n  constructor(\n    private menuService: MenuService,\n    private roleService: RoleService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private alertService: AlertService) { }\n\n  ngOnInit() {\n\n    this.menuForm = new FormGroup({\n      id: new FormControl(0),\n      title: new FormControl('', [Validators.required, Validators.maxLength(100)]),\n      link: new FormControl('', [Validators.required, Validators.maxLength(100)]),\n      iconName: new FormControl('', [Validators.required, Validators.maxLength(100)]),\n      selectedMainMenu: new FormControl([]),\n      sortId: new FormControl(0, [Validators.required]),\n      isActive: new FormControl(true),\n      selectedUserRole: new FormControl([], [Validators.required])\n    });\n    \n    this.id = this.route.snapshot.params.id;\n\n    if (this.id === undefined) {\n      this.id = 0;\n      this.menuForm.get('selectedMainMenu').setValue(0);\n    }\n\n    this.roleService.get(this.roleParam).subscribe((data) => {\n      console.log(data);\n      this.roles = data.roles;\n    }, (error) => {\n      this.alertService.showAlert(error);\n    });\n\n    this.menuService.getMainMenus(this.id).subscribe(data => {\n      data.forEach(element => {\n        this.mainMenus.push({ id: element.id, title: element.title });\n      });\n    }, error => {\n      this.alertService.showAlert(error);\n    });\n\n    \n\n    this.menuService.getById(this.id).subscribe(\n      (data) => {\n        this.menu = data;\n      },\n      (error) => {\n        this.alertService.showAlert(error);\n      },\n      () => {\n        console.log(1, this.menu);\n        this.menuForm.get('id').setValue(this.menu.id);\n        this.menuForm.get('title').setValue(this.menu.title);\n        this.menuForm.get('link').setValue(this.menu.link);\n        this.menuForm.get('iconName').setValue(this.menu.iconName);\n        this.menuForm.get('sortId').setValue(this.menu.sortId);\n        this.menuForm.get('isActive').setValue(this.menu.isActive);\n        const roles = [];\n\n        this.menu.roles.forEach(element => {\n          roles.push(element.id);\n        });\n\n        this.menuForm.get('selectedMainMenu').setValue(this.menu.mainMenuId);\n\n        this.menuForm.get('selectedUserRole').setValue(roles);\n      });\n\n  }\n\n  onSubmit() {\n\n    this.menuToSave = {\n      iconName: this.menuForm.get('iconName').value,\n      title: this.menuForm.get('title').value,\n      link: this.menuForm.get('link').value,\n      mainMenuId: this.menuForm.get('selectedMainMenu').value,\n      sortId: this.menuForm.get('sortId').value,\n      isActive: this.menuForm.get('isActive').value,\n      userRoles: this.menuForm.get('selectedUserRole').value.join(',')\n    };\n    console.log('???', this.menuToSave);\n    if (this.id === 0) {\n      this.menuService.add(this.menuToSave).subscribe((response) => {\n        this.router.navigate(['/menu']);\n      }, (error) => {\n        this.alertService.showAlert(error);\n      });\n    } else {\n      this.menuService.update(this.id, this.menuToSave).subscribe((response) => {\n        this.router.navigate(['/menu']);\n      }, (error) => {\n        this.alertService.showAlert(error);\n      });\n    }\n  }\n\n  onCancel() {\n    this.router.navigate(['/menu']);\n  }\n}\n","<section>\n  <form [formGroup]=\"menuForm\"\n        (ngSubmit)=\"onSubmit()\"\n        fxLayout=\"column\"\n        fxLayoutAlign=\"space-between center\"\n        fxLayoutGap=\"10px\">\n    <mat-form-field hintLabel=\"Maximum length is 100\">\n      <input type=\"text\"\n             #title\n             formControlName=\"title\"\n             placeholder=\"Title\"\n             matInput>\n      <mat-hint align=\"end\">{{title.value.length}}/100</mat-hint>\n      <mat-error *ngIf=\"!menuForm.get('title').valid && menuForm.get('title').touched\">\n        <mat-error *ngIf=\"menuForm.get('title').errors['required']\">Title is required.</mat-error>\n        <mat-error *ngIf=\"menuForm.get('title').errors['maxlength']\">Maximum length is 100.</mat-error>\n      </mat-error>\n    </mat-form-field>\n    <mat-form-field hintLabel=\"Maximum length is 100\">\n      <input type=\"text\"\n             #link\n             formControlName=\"link\"\n             placeholder=\"Link\"\n             matInput>\n      <mat-hint align=\"end\">{{link.value.length}}/100</mat-hint>\n      <mat-error *ngIf=\"!menuForm.get('link').valid && menuForm.get('link').touched\">\n        <mat-error *ngIf=\"menuForm.get('link').errors['required']\">Link is required.</mat-error>\n        <mat-error *ngIf=\"menuForm.get('link').errors['maxlength']\">Maximum length is 100.</mat-error>\n      </mat-error>\n    </mat-form-field>\n    <mat-form-field hintLabel=\"Maximum length is 100\">\n      <input type=\"text\"\n             #icon\n             formControlName=\"iconName\"\n             placeholder=\"Icon\"\n             matInput>\n      <mat-hint align=\"end\">{{icon.value.length}}/100</mat-hint>\n      <mat-error *ngIf=\"!menuForm.get('iconName').valid && menuForm.get('iconName').touched\">\n        <mat-error *ngIf=\"menuForm.get('iconName').errors['required']\">Icon is required.</mat-error>\n        <mat-error *ngIf=\"menuForm.get('iconName').errors['maxlength']\">Maximum length is 100.</mat-error>\n      </mat-error>\n    </mat-form-field>\n    <mat-form-field>\n      <input type=\"number\"\n             #sortId\n             formControlName=\"sortId\"\n             placeholder=\"Sort Id\"\n             matInput>\n      <mat-error *ngIf=\"!menuForm.get('sortId').valid && menuForm.get('sortId').touched\">\n        <mat-error *ngIf=\"menuForm.get('sortId').errors['sortId']\">Icon is required.</mat-error>\n      </mat-error>\n    </mat-form-field>\n    <mat-form-field>\n      <mat-label>Main Menu</mat-label>\n      <mat-select formControlName=\"selectedMainMenu\">\n        <mat-option *ngFor=\"let menu of mainMenus\"\n                    [value]=\"menu.id\">\n          {{menu.title}}\n        </mat-option>\n      </mat-select>\n    </mat-form-field>\n    <mat-form-field>\n      <mat-label>Role</mat-label>\n      <mat-select multiple\n                  formControlName=\"selectedUserRole\">\n        <mat-option *ngFor=\"let role of roles\"\n                    [value]=\"role.id\">\n          {{role.description}}\n        </mat-option>\n      </mat-select>\n      <mat-error *ngIf=\"!menuForm.get('selectedUserRole').valid && menuForm.get('selectedUserRole').touched\">\n        <mat-error *ngIf=\"menuForm.get('selectedUserRole').errors['required']\">Role is required.</mat-error>\n      </mat-error>\n    </mat-form-field>\n\n    <div fxLayoutAlign=\"start\">\n      <mat-checkbox formControlName='isActive'\n                    labelPosition=\"before\"\n                    color=\"primary\">Is Active</mat-checkbox>\n    </div>\n    <div fxLayout=\"row\"\n         fxLayoutGap=\"10px\">\n      <button mat-raised-button\n              [disabled]=\"!menuForm.valid\"\n              color=\"primary\"\n              type=\"submit\">Save</button>\n      <button mat-raised-button\n              type=\"button\"\n              (click)=\"onCancel()\"\n              class=\"accent\">Cancel</button>\n    </div>\n  </form>\n</section>\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { MenuService } from 'src/menu/services/menu.service';\nimport { AlertService } from 'src/_services/alert.service';\nimport { MenuListComponent } from '../menu-list/menu-list.component';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-menu-delete',\n  templateUrl: './menu-delete.component.html',\n  styleUrls: ['./menu-delete.component.css']\n})\nexport class MenuDeleteComponent implements OnInit {\n\n  constructor(\n    private menuService: MenuService,\n    private alertService: AlertService,\n    public dialogRef: MatDialogRef<MenuListComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any\n  ) { }\n  \n  ngOnInit(): void {\n  }\n\n  onDelete(id: number) {\n    this.menuService.delete(id).subscribe(\n      (data) => {\n        this.alertService.showAlert('deleted successfully.');\n        this.dialogRef.close(true);\n      },\n      (error) => {\n        this.alertService.showAlert(error);\n      });\n  }\n}\n","<h2 mat-dialog-title>Delete Confirmation?</h2>\n<mat-dialog-content class=\"mat-typography\">\n  Are you sure you want to delete {{data.title}}?\n</mat-dialog-content>\n<mat-dialog-actions align=\"end\">\n  <button mat-button\n          mat-dialog-close>Cancel</button>\n  <button mat-button\n          (click)=\"onDelete(data.id)\"\n          cdkFocusInitial>Delete</button>\n</mat-dialog-actions>\n","import { Component, OnInit, ViewChild, AfterViewInit } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatSort, Sort } from '@angular/material/sort';\nimport { MatPaginator, PageEvent } from '@angular/material/paginator';\nimport { IParam } from 'src/_models/param';\nimport { Router } from '@angular/router';\nimport { MatDialog } from '@angular/material/dialog';\nimport { AlertService } from 'src/_services/alert.service';\nimport { IMenu } from 'src/_models/menu-data';\nimport { MenuService } from 'src/menu/services/menu.service';\nimport { MenuDeleteComponent } from '../menu-delete/menu-delete.component';\n\n@Component({\n  selector: 'app-menu-list',\n  templateUrl: './menu-list.component.html',\n  styleUrls: ['./menu-list.component.css']\n})\n\nexport class MenuListComponent implements AfterViewInit, OnInit {\n\n  columnsToDisplay = ['title', 'sortId', 'link', 'mainMenuName', 'roles', 'edit', 'delete'];\n\n  data: IMenu[];\n\n  dataSource = new MatTableDataSource<IMenu>();\n\n  params: IParam = {\n    pageNumber: 1,\n    pageSize: 5\n  };\n\n  length = 1;\n  pageSizeOptions: number[] = [5, 10, 25];\n  searchList = [{ key: 1, value: 'Title' }];\n  selected = 'Title';\n\n  isLoading = true;\n\n  @ViewChild(MatSort) matSort: MatSort;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild('selectedSearchBy', { static: false }) selectedSearchBy;\n\n  constructor(\n    private matDialog: MatDialog,\n    private menuService: MenuService,\n    private alertService: AlertService,\n    private route: Router) { }\n\n  private getMenus(param: IParam) {\n    this.menuService.get(this.params).subscribe((data) => {\n      console.log('???;', data);\n      this.dataSource.data = data.menus;\n      this.length = data.totalCount;\n      this.isLoading = false;\n    }, (error) => {\n      this.alertService.showAlert(error, 'Okay', 20000);\n    });\n  }\n\n  ngOnInit(): void {\n    this.getMenus(this.params);\n  }\n\n  ngAfterViewInit() {\n    this.matSort.sortChange.subscribe((sort: Sort) => {\n      this.params.sortBy = sort.active;\n      this.params.sortDirection = sort.direction;\n      this.getMenus(this.params);\n    });\n  }\n\n  applyFilter(filteredValue: string) {\n    this.isLoading = true;\n\n    console.log(filteredValue, this.selectedSearchBy.value);\n    this.paginator.pageIndex = 0;\n\n    this.params.searchBy = this.selectedSearchBy.value;\n    this.params.searchText = filteredValue;\n    this.params.pageNumber = 1;\n    this.getMenus(this.params);\n  }\n\n  change(event: PageEvent) {\n    this.isLoading = true;\n    setTimeout(() => {\n      this.params.pageNumber = event.pageIndex + 1;\n      this.params.pageSize = event.pageSize;\n      this.getMenus(this.params);\n    }, 500);\n  }\n\n  onAddNew() {\n    this.route.navigate(['/addMenu']);\n  }\n\n  onDelete(title: string, id: number) {\n    const dialogRef = this.matDialog.open(MenuDeleteComponent, { data: { title, id } });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result === true) {\n        this.getMenus(this.params);\n      }\n    });\n  }\n\n  onView(id: number) {\n    // const dialogRef = this.matDialog.open(ViewUserComponent, { data: { id } });\n  }\n}\n","<mat-toolbar color=\"accent\">\n  <mat-toolbar-row fxLayout=\"row\"\n  fxLayoutAlign=\"space-around center\"\n  fxLayoutGap=\"10px\">\n    <div fxFlex=\"30\">\n      <span>Menu Setup</span>\n    </div>\n    <div fxFlex=\"70\" fxLayout=\"row\"\n         fxLayoutAlign=\"end center\"\n         fxLayoutGap=\"10px\">\n      <span><button mat-flat-button\n                color=\"primary\"\n                type=\"button\"\n                (click)=\"onAddNew()\"\n                matTooltip=\"Add menu\">Add New</button></span>\n      <span><button mat-flat-button\n                color=\"primary\"\n                type=\"button\"\n                (click)=\"onAddNew()\"\n                matTooltip=\"Export\">Export</button></span>\n    </div>\n  </mat-toolbar-row>\n</mat-toolbar>\n<br>\n<div fxLayout=\"row\"\n     fxLayoutAlign=\"space-evenly center\">\n  <mat-form-field fxFlex=\"20%\">\n    <mat-label>Search By</mat-label>\n    <mat-select #selectedSearchBy\n                [(value)]=\"selected\">\n      <mat-option *ngFor=\"let item of searchList\"\n                  [value]=\"item.value\">\n        {{item.value}} </mat-option>\n    </mat-select>\n  </mat-form-field>\n  <mat-form-field fxFlex=\"40%\">\n    <mat-label>Filter</mat-label>\n    <input matInput\n           (keyup)=\"applyFilter($event.target.value)\"\n           placeholder=\"\">\n  </mat-form-field>\n\n</div>\n<table mat-table\n       [dataSource]=\"dataSource\"\n       matSort>\n  <tr mat-header-row\n      *matHeaderRowDef=\"columnsToDisplay; sticky: true\"></tr>\n  <tr mat-row\n      *matRowDef=\"let myRowData; columns: columnsToDisplay\"></tr>\n  <ng-container matColumnDef=\"title\">\n    <th mat-header-cell\n        *matHeaderCellDef\n        mat-sort-header\n        [disabled]=\"isLoading\"> Title </th>\n    <td mat-cell\n        *matCellDef=\"let menu\"> {{menu.title}}</td>\n  </ng-container>\n  <ng-container matColumnDef=\"sortId\">\n    <th mat-header-cell\n        *matHeaderCellDef\n        mat-sort-header\n        [disabled]=\"isLoading\"> Sort Id </th>\n    <td mat-cell\n        *matCellDef=\"let menu\"> {{menu.sortId}}</td>\n  </ng-container>\n  <ng-container matColumnDef=\"link\">\n    <th mat-header-cell\n        *matHeaderCellDef\n        mat-sort-header\n        [disabled]=\"isLoading\"> Link </th>\n    <td mat-cell\n        *matCellDef=\"let menu\"> {{menu.link}}</td>\n  </ng-container>\n  <ng-container matColumnDef=\"mainMenuName\">\n    <th mat-header-cell\n        *matHeaderCellDef\n        mat-sort-header\n        [disabled]=\"isLoading\"> Main Menu </th>\n    <td mat-cell\n        *matCellDef=\"let menu\"> {{menu.mainMenuName}}</td>\n  </ng-container>\n  <ng-container matColumnDef=\"roles\">\n    <th mat-header-cell\n        *matHeaderCellDef>Role </th>\n    <td mat-cell\n        *matCellDef=\"let menu\">\n      <code *ngFor=\"let role of menu.roles\">{{role.description}} | </code>\n    </td>\n  </ng-container>\n  <ng-container matColumnDef=\"edit\">\n    <th mat-header-cell\n        *matHeaderCellDef>Edit</th>\n    <td mat-cell\n        *matCellDef=\"let menu\">\n      <button mat-icon-button\n              matTooltip=\"Edit or Change\"\n              matTooltipClass=\"example-tooltip-red\"\n              color=\"primary\"\n              [routerLink]=\"['/addMenu',menu.id]\"><i class=\"fa fa-edit\"></i></button>\n    </td>\n  </ng-container>\n  <ng-container matColumnDef=\"delete\">\n    <th mat-header-cell\n        *matHeaderCellDef>Delete</th>\n    <td mat-cell\n        *matCellDef=\"let menu\">\n      <button mat-icon-button\n              matTooltip=\"Delete or Remove\"\n              matTooltipClass=\"example-tooltip-red\"\n              color=\"primary\"\n              (click)=\"onDelete(menu.title, menu.id)\"><i class=\"fa fa-trash\"></i></button>\n    </td>\n  </ng-container>\n</table>\n<mat-progress-bar mode=\"indeterminate\"\n                  *ngIf=\"!!isLoading\"></mat-progress-bar>\n<mat-paginator [length]=\"length\"\n               [pageSize]=\"params.pageSize\"\n               [pageSizeOptions]=\"pageSizeOptions\"\n               (page)=\"change($event)\"\n               [disabled]=\"isLoading\">\n</mat-paginator>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MaterialModule } from 'src/app/material.module';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MenuListComponent } from './components/menu-list/menu-list.component';\nimport { MenuAddComponent } from './components/menu-add/menu-add.component';\nimport { MenuDeleteComponent } from './components/menu-delete/menu-delete.component';\n\n@NgModule({\n    declarations: [\n        MenuListComponent,\n        MenuAddComponent,\n        MenuDeleteComponent\n    ],\n    imports: [\n        CommonModule,\n        RouterModule,\n        ReactiveFormsModule,\n        MaterialModule,\n        FlexLayoutModule\n    ],\n    entryComponents: [\n        MenuDeleteComponent\n    ],\n    exports: [\n        MenuListComponent,\n        MenuAddComponent,\n        MenuDeleteComponent\n    ]\n})\nexport class MenuModule {\n}\n","import { Injectable } from '@angular/core';\nimport { Base } from 'src/_services/base';\nimport { environment } from 'src/environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { IMenu, IMenus, IMenuToSave, IMainMenu } from 'src/_models/menu-data';\nimport { IParam } from 'src/_models/param';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MenuService extends Base {\n\n  private baseUrl = environment.apiUrl;\n\n  constructor(private http: HttpClient, private router: Router) {\n    super();\n  }\n\n  getById(id: number): Observable<IMenu> {\n    console.log('id-getbyid', id);\n    if (id === 0) {\n      return new Observable((observe) => {\n        console.log('id-getbyid', id);\n\n        observe.next({\n          id: 0,\n          title: '',\n          link: '',\n          iconName: '',\n          mainMenuId: 0,\n          sortId: 0,\n          roles: [],\n          isActive: true\n        });\n      });\n    } else {\n      return this.http.get<IMenu>(this.baseUrl + 'menu\\\\' + id);\n    }\n  }\n\n  get(parameters: IParam): Observable<IMenus> {\n    const httpParams = this.getHttpParams(parameters);\n\n    console.log(parameters.sortDirection);\n\n    return this.http.get<IMenus>(this.baseUrl + 'menu', { params: httpParams });\n\n  }\n\n  getMainMenus(id: number): Observable<IMainMenu[]> {\n    return this.http.get<IMainMenu[]>(this.baseUrl + 'menu/mainmenus/' + id);\n  }\n\n  add(newMenu: IMenuToSave) {\n    console.log(newMenu);\n    return this.http.post(this.baseUrl + 'menu', newMenu);\n  }\n\n  update(id: number, newMenu: IMenuToSave) {\n    return this.http.patch(this.baseUrl + 'menu/' + id, newMenu);\n  }\n\n  delete(id: number) {\n    return this.http.delete(this.baseUrl + 'menu/' + id);\n  }\n\n}\n","import { Component, OnInit, ViewChild, AfterViewInit } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatSort, Sort } from '@angular/material/sort';\nimport { MatPaginator, PageEvent } from '@angular/material/paginator';\nimport { IParam } from 'src/_models/param';\nimport { Router } from '@angular/router';\nimport { MatDialog } from '@angular/material/dialog';\nimport { AlertService } from 'src/_services/alert.service';\nimport { IRole } from 'src/_models/role-data';\nimport { RoleService } from 'src/role/services/role.service';\n\n@Component({\n  selector: 'app-list-role',\n  templateUrl: './list-role.component.html',\n  styleUrls: ['./list-role.component.css']\n})\nexport class ListRoleComponent implements AfterViewInit, OnInit {\n\n  columnsToDisplay = ['description', 'edit', 'delete'];\n\n  data: IRole[];\n\n  dataSource = new MatTableDataSource<IRole>();\n\n  params: IParam = {\n    pageNumber: 1,\n    pageSize: 5\n  };\n\n  length = 1;\n  pageSizeOptions: number[] = [5, 10, 25];\n  searchList = [{ key: 1, value: 'Description' }];\n  selected = 'Description';\n\n  isLoading = true;\n\n  @ViewChild(MatSort) matSort: MatSort;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild('selectedSearchBy', { static: false }) selectedSearchBy;\n\n  constructor(\n    private matDialog: MatDialog,\n    private roleService: RoleService,\n    private alertService: AlertService,\n    private route: Router) { }\n\n  private getRoles(param: IParam) {\n    this.roleService.get(this.params).subscribe((data) => {\n      this.dataSource.data = data.roles;\n      this.length = data.totalCount;\n      this.isLoading = false;\n    }, (error) => {\n      this.alertService.showAlert(error, 'Okay', 20000);\n    });\n  }\n\n  ngOnInit(): void {\n    this.getRoles(this.params);\n  }\n\n  ngAfterViewInit() {\n    this.matSort.sortChange.subscribe((sort: Sort) => {\n      this.params.sortBy = sort.active;\n      this.params.sortDirection = sort.direction;\n      this.getRoles(this.params);\n    });\n  }\n\n  applyFilter(filteredValue: string) {\n    this.isLoading = true;\n\n    console.log(filteredValue, this.selectedSearchBy.value);\n    this.paginator.pageIndex = 0;\n\n    this.params.searchBy = this.selectedSearchBy.value;\n    this.params.searchText = filteredValue;\n    this.params.pageNumber = 1;\n    this.getRoles(this.params);\n  }\n\n  change(event: PageEvent) {\n    this.isLoading = true;\n    setTimeout(() => {\n      this.params.pageNumber = event.pageIndex + 1;\n      this.params.pageSize = event.pageSize;\n      this.getRoles(this.params);\n    }, 500);\n  }\n\n  onAddNew() {\n    this.route.navigate(['/addRole']);\n  }\n\n  onDelete(username: string, id: number) {\n    // const dialogRef = this.matDialog.open(DeleteUserComponent, { data: { username, id } });\n\n    // dialogRef.afterClosed().subscribe(result => {\n    //   if (result === true) {\n    //     this.getUsers(this.params);\n    //   }\n    // });\n  }\n\n  onView(id: number) {\n    // const dialogRef = this.matDialog.open(ViewUserComponent, { data: { id } });\n  }\n}\n","<mat-toolbar color=\"accent\">\n  <mat-toolbar-row fxLayout=\"row\"\n  fxLayoutAlign=\"space-around center\"\n  fxLayoutGap=\"10px\">\n    <div fxFlex=\"30\">\n      <span>Role Setup</span>\n    </div>\n    <div fxFlex=\"70\" fxLayout=\"row\"\n         fxLayoutAlign=\"end center\"\n         fxLayoutGap=\"10px\">\n      <span><button mat-flat-button\n                color=\"primary\"\n                type=\"button\"\n                (click)=\"onAddNew()\"\n                matTooltip=\"Add menu\">Add New</button></span>\n      <span><button mat-flat-button\n                color=\"primary\"\n                type=\"button\"\n                (click)=\"onAddNew()\"\n                matTooltip=\"Export\">Export</button></span>\n    </div>\n  </mat-toolbar-row>\n</mat-toolbar>\n<br>\n<div fxLayout=\"row\"\n     fxLayoutAlign=\"space-evenly center\">\n  <mat-form-field fxFlex=\"20%\">\n    <mat-label>Search By</mat-label>\n    <mat-select #selectedSearchBy\n                [(value)]=\"selected\">\n      <mat-option *ngFor=\"let item of searchList\"\n                  [value]=\"item.value\">\n        {{item.value}} </mat-option>\n    </mat-select>\n  </mat-form-field>\n  <mat-form-field fxFlex=\"40%\">\n    <mat-label>Filter</mat-label>\n    <input matInput\n           (keyup)=\"applyFilter($event.target.value)\"\n           placeholder=\"\">\n  </mat-form-field>\n\n</div>\n<table mat-table\n       [dataSource]=\"dataSource\"\n       matSort>\n  <tr mat-header-row\n      *matHeaderRowDef=\"columnsToDisplay; sticky: true\"></tr>\n  <tr mat-row\n      *matRowDef=\"let myRowData; columns: columnsToDisplay\"></tr>\n  <ng-container matColumnDef=\"description\">\n    <th mat-header-cell\n        *matHeaderCellDef\n        mat-sort-header\n        [disabled]=\"isLoading\"> Description </th>\n    <td mat-cell\n        *matCellDef=\"let role\"> <button mat-button\n              (click)=\"onView(role.id)\"\n              color=\"primary\">{{role.description}}</button> </td>\n  </ng-container>\n  <ng-container matColumnDef=\"edit\">\n    <th mat-header-cell\n        *matHeaderCellDef>Edit</th>\n    <td mat-cell\n        *matCellDef=\"let role\">\n      <button mat-icon-button\n              matTooltip=\"Edit or Change\"\n              matTooltipClass=\"example-tooltip-red\"\n              color=\"primary\"\n              [routerLink]=\"['/addRole',role.id]\"><i class=\"fa fa-edit\"></i></button>\n    </td>\n  </ng-container>\n  <ng-container matColumnDef=\"delete\">\n    <th mat-header-cell\n        *matHeaderCellDef>Delete</th>\n    <td mat-cell\n        *matCellDef=\"let role\">\n      <button mat-icon-button\n              matTooltip=\"Delete or Remove\"\n              matTooltipClass=\"example-tooltip-red\"\n              color=\"primary\"\n              (click)=\"onDelete(role.description, role.id)\"><i class=\"fa fa-trash\"></i></button>\n    </td>\n  </ng-container>\n</table>\n<mat-progress-bar mode=\"indeterminate\"\n                  *ngIf=\"!!isLoading\"></mat-progress-bar>\n<mat-paginator [length]=\"length\"\n               [pageSize]=\"params.pageSize\"\n               [pageSizeOptions]=\"pageSizeOptions\"\n               (page)=\"change($event)\"\n               [disabled]=\"isLoading\">\n</mat-paginator>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MaterialModule } from 'src/app/material.module';\nimport { ListRoleComponent } from './components/list/list-role.component';\n\n@NgModule({\n    declarations: [\n        ListRoleComponent\n    ],\n    imports: [\n        CommonModule,\n        RouterModule,\n        ReactiveFormsModule,\n        MaterialModule,\n        FlexLayoutModule\n    ],\n    entryComponents: [],\n    exports: [\n        ListRoleComponent\n    ]\n})\n\nexport class RoleModule {\n}\n","import { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { IRole, IRoles, IRoleToSave } from 'src/_models/role-data';\nimport { IParam } from 'src/_models/param';\nimport { Base } from 'src/_services/base';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RoleService extends Base {\n\n  private baseUrl = environment.apiUrl;\n\n  constructor(private http: HttpClient, private router: Router) {\n    super();\n  }\n\n  getById(id: number): Observable<IRole> {\n    if (id === 0) {\n      return new Observable((observe) => {\n        observe.next({\n          id: 0,\n          description: '',\n          isActive: true\n        });\n      });\n    } else {\n      return this.http.get<IRole>(this.baseUrl + 'role\\\\' + id);\n    }\n  }\n\n  get(parameters: IParam): Observable<IRoles> {\n    const httpParams = this.getHttpParams(parameters);\n\n    console.log(parameters.sortDirection);\n\n    return this.http.get<IRoles>(this.baseUrl + 'role', { params: httpParams });\n\n  }\n\n  add(newRole: IRoleToSave) {\n    console.log(newRole);\n    return this.http.post(this.baseUrl + 'role', newRole);\n  }\n\n  update(id: number, newRole: IRoleToSave) {\n    return this.http.patch(this.baseUrl + 'role/' + id, newRole);\n  }\n\n  delete(id: number) {\n    return this.http.delete(this.baseUrl + 'role/' + id);\n  }\n\n}\n","import { Component, OnInit, AfterViewInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { UserService } from 'src/user/services/user.service';\nimport { IUser } from 'src/_models/user-data';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { AlertService } from 'src/_services/alert.service';\nimport { IParam } from 'src/_models/param';\nimport { IRole } from 'src/_models/role-data';\nimport { RoleService } from 'src/role/services/role.service';\n\n@Component({\n  selector: 'app-add-user',\n  templateUrl: './add-user.component.html',\n  styleUrls: ['./add-user.component.css']\n})\n\nexport class AddUserComponent implements OnInit, AfterViewInit {\n\n  signUpForm: FormGroup;\n\n  roles: IRole[];\n  user: IUser;\n  id = 0;\n\n  roleParam: IParam = {};\n\n  constructor(\n    private userService: UserService,\n    private roleService: RoleService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private alertService: AlertService) { }\n\n  ngAfterViewInit(): void {\n\n  }\n\n  ngOnInit() {\n\n    this.roleService.get(this.roleParam).subscribe((data) => {\n      console.log(data);\n      this.roles = data.roles;\n    }, (error) => {\n      this.alertService.showAlert(error);\n    });\n\n    this.signUpForm = new FormGroup({\n      id: new FormControl(0),\n      name: new FormControl('',\n        [Validators.required, Validators.minLength(6), Validators.maxLength(70)]),\n      username: new FormControl('',\n        [Validators.required, Validators.minLength(6), Validators.maxLength(50)]),\n      email: new FormControl('',\n        [Validators.email, , Validators.maxLength(70), Validators.required]),\n      phone: new FormControl('', [Validators.maxLength(20)]),\n      isActive: new FormControl(true),\n      selectedUserRole: new FormControl([], [Validators.required])\n    });\n\n    this.id = this.route.snapshot.params.id;\n\n    if (this.id === undefined) {\n      this.id = 0;\n    }\n\n    this.userService.getById(this.id).subscribe(\n      (data) => {\n        this.user = data;\n      },\n      (error) => {\n        this.alertService.showAlert(error);\n      },\n      () => {\n        console.log(1, this.user);\n        this.signUpForm.get('id').setValue(this.user.id);\n        this.signUpForm.get('username').setValue(this.user.username);\n        this.signUpForm.get('name').setValue(this.user.name);\n        this.signUpForm.get('email').setValue(this.user.email);\n        this.signUpForm.get('phone').setValue(this.user.phone);\n        this.signUpForm.get('isActive').setValue(this.user.isActive);\n        const roles = [];\n        this.user.userRole.forEach(element => {\n          roles.push(element.id);\n        });\n\n        this.signUpForm.get('selectedUserRole').setValue(roles);\n      });\n\n  }\n\n  onSubmit() {\n    this.user = {\n      id: this.signUpForm.get('id').value,\n      username: this.signUpForm.get('username').value,\n      name: this.signUpForm.get('name').value,\n      email: this.signUpForm.get('email').value,\n      phone: this.signUpForm.get('phone').value,\n      isActive: this.signUpForm.get('isActive').value,\n      userRole: this.signUpForm.get('selectedUserRole').value\n    };\n    console.log('???', this.user);\n    if (this.id === 0) {\n      this.userService.add(this.user).subscribe((response) => {\n        this.router.navigate(['/user']);\n      }, (error) => {\n        this.alertService.showAlert(error);\n      });\n    } else {\n      this.userService.update(this.id, this.user).subscribe((response) => {\n        this.router.navigate(['/user']);\n      }, (error) => {\n        this.alertService.showAlert(error);\n      });\n    }\n  }\n\n  onCancel() {\n    this.router.navigate(['/user']);\n  }\n}\n","<section>\n  <form [formGroup]='signUpForm'\n        (ngSubmit)=\"onSubmit()\"\n        fxLayout=\"column\"\n        fxLayoutAlign=\"space-between center\"\n        fxLayoutGap=\"10px\">\n\n    <mat-form-field hintLabel=\"Maximum length is 70\">\n      <input type=\"text\"\n             #name\n             formControlName='name'\n             placeholder=\"Name\"\n             matInput>\n      <mat-hint align=\"end\">{{name.value.length}} /70</mat-hint>\n      <mat-error *ngIf=\"!signUpForm.get('name').valid && signUpForm.get('name').touched\">\n        <mat-error *ngIf=\"signUpForm.get('name').errors['required']\">Name is required.</mat-error>\n        <mat-error *ngIf=\"signUpForm.get('name').errors['minlength']\">Minium length is 6.</mat-error>\n        <mat-error *ngIf=\"signUpForm.get('name').errors['maxlength']\">Maximum length is 70.</mat-error>\n      </mat-error>\n    </mat-form-field>\n\n    <mat-form-field hintLabel=\"Maximum length is 50\">\n      <input type=\"text\"\n             #username\n             formControlName='username'\n             placeholder=\"Username\"\n             matInput>\n      <mat-hint align=\"end\">{{username.value.length}} /50</mat-hint>\n      <mat-error *ngIf=\"!signUpForm.get('username').valid && signUpForm.get('username').touched\">\n        <mat-error *ngIf=\"signUpForm.get('username').errors['required']\">Username is required.</mat-error>\n        <mat-error *ngIf=\"signUpForm.get('username').errors['minlength']\">Minium length is 6.</mat-error>\n        <mat-error *ngIf=\"signUpForm.get('username').errors['maxlength']\">Maximum length is 50.</mat-error>\n      </mat-error>\n    </mat-form-field>\n\n    <!-- <mat-form-field hintLabel=\"Maximum length is 50\">\n      <input type=\"password\"\n             #password\n             formControlName='password'\n             placeholder=\"Password\"\n             matInput>\n      <mat-hint align=\"end\">{{password.value.length}} /50</mat-hint>\n      <mat-error *ngIf=\"!signUpForm.get('password').valid && signUpForm.get('password').touched\">\n        <mat-error *ngIf=\"signUpForm.get('password').errors['required']\">Password is required.</mat-error>\n        <mat-error *ngIf=\"signUpForm.get('password').errors['minlength']\">Minium length is 8.</mat-error>\n        <mat-error *ngIf=\"signUpForm.get('password').errors['maxlength']\">Minium length is 50.</mat-error>\n      </mat-error>\n    </mat-form-field> -->\n\n    <mat-form-field hintLabel=\"Maximum length is 100\">\n      <input type=\"email\"\n             #email\n             formControlName='email'\n             placeholder=\"Email\"\n             matInput>\n      <mat-hint align=\"end\">{{email.value.length}} /50</mat-hint>\n      <mat-error *ngIf=\"!signUpForm.get('email').valid && signUpForm.get('email').touched\">\n        <mat-error *ngIf=\"signUpForm.get('email').errors['required']\">Email is required.</mat-error>\n        <mat-error *ngIf=\"signUpForm.get('email').errors['email']\">Valid email address is required.</mat-error>\n        <mat-error *ngIf=\"signUpForm.get('email').errors['maxlength']\">Maximum length is 100.</mat-error>\n      </mat-error>\n    </mat-form-field>\n    <mat-form-field hintLabel=\"Maximum length is 20\">\n      <input type=\"text\"\n             #phone\n             formControlName=\"phone\"\n             placeholder=\"Phone\"\n             matInput>\n      <mat-hint align=\"end\">{{phone.value.length}}/20</mat-hint>\n      <mat-error *ngIf=\"!signUpForm.get('phone').valid && signUpForm.get('phone').touched\">\n        <mat-error *ngIf=\"signUpForm.get('phone').errors['maxlength']\">Maximum length is 20.</mat-error>\n      </mat-error>\n    </mat-form-field>\n    <!-- <mat-form-field>\n      <mat-label>Active Date</mat-label>\n      <input matInput\n             [matDatepicker]=\"picker\"\n             [min]=\"minDate\">\n      <mat-datepicker-toggle matSuffix\n                             [for]=\"picker\">\n        <i class=\"fa fa-calender\"></i>\n      </mat-datepicker-toggle>\n      <mat-datepicker #picker></mat-datepicker>\n    </mat-form-field> -->\n    <mat-form-field>\n      <mat-label>Role</mat-label>\n      <mat-select multiple\n                  formControlName=\"selectedUserRole\">\n        <mat-option *ngFor=\"let role of roles\"\n                    [value]=\"role.id\">\n          {{role.description}}\n        </mat-option>\n      </mat-select>\n      <mat-error *ngIf=\"!signUpForm.get('selectedUserRole').valid && signUpForm.get('selectedUserRole').touched\">\n        <mat-error *ngIf=\"signUpForm.get('selectedUserRole').errors['required']\">Role is required.</mat-error>\n      </mat-error>\n    </mat-form-field>\n\n    <div fxLayoutAlign=\"start\">\n      <mat-checkbox formControlName='isActive'\n                    labelPosition=\"before\"\n                    color=\"primary\">Is Active</mat-checkbox>\n    </div>\n    <div fxLayout=\"row\"\n         fxLayoutGap=\"10px\">\n      <button mat-raised-button\n              [disabled]=\"!signUpForm.valid\"\n              color=\"primary\"\n              type=\"submit\">Save</button>\n      <button mat-raised-button\n              type=\"button\"\n              (click)=\"onCancel()\"\n              class=\"accent\">Cancel</button>\n    </div>\n  </form>\n</section>\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { UserService } from 'src/user/services/user.service';\nimport { AuthService } from 'src/auth/services/auth.service';\nimport { AlertService } from 'src/_services/alert.service';\nimport { MatDialogRef , MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport { ListUserComponent } from '../list/list-user.component';\n\n@Component({\n  selector: 'app-delete-user',\n  templateUrl: './delete-user.component.html',\n  styleUrls: ['./delete-user.component.css']\n})\nexport class DeleteUserComponent implements OnInit {\n\n  constructor(\n    private userService: UserService,\n    private authService: AuthService,\n    private alertService: AlertService,\n    public dialogRef: MatDialogRef<ListUserComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any) { }\n\n  ngOnInit() {\n  }\n\n  onDelete(id: number) {\n    this.userService.delete(id).subscribe(\n      (data) => {\n        this.alertService.showAlert('deleted successfully.');\n        this.dialogRef.close(true);\n      },\n      (error) => {\n        this.alertService.showAlert(error);\n      });\n  }\n\n}\n","<h2 mat-dialog-title>Delete Confirmation?</h2>\n<mat-dialog-content class=\"mat-typography\">\n  Are you sure you want to delete {{data.username}}?\n</mat-dialog-content>\n<mat-dialog-actions align=\"end\">\n  <button mat-button\n          mat-dialog-close>Cancel</button>\n  <button mat-button\n          (click)=\"onDelete(data.id)\"\n          cdkFocusInitial>Delete</button>\n</mat-dialog-actions>\n","import { Component, OnInit, ViewChild, ElementRef, AfterViewInit } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatSort, Sort } from '@angular/material/sort';\nimport { MatPaginator, PageEvent } from '@angular/material/paginator';\nimport { IUser } from 'src/_models/user-data';\nimport { UserService } from 'src/user/services/user.service';\nimport { IParam } from 'src/_models/param';\nimport { Router } from '@angular/router';\nimport { MatDialog } from '@angular/material/dialog';\nimport { DeleteUserComponent } from '../delete/delete-user.component';\nimport { AlertService } from 'src/_services/alert.service';\nimport { ViewUserComponent } from '../view/view-user.component';\n\n@Component({\n  selector: 'app-list-user',\n  templateUrl: './list-user.component.html',\n  styleUrls: ['./list-user.component.css']\n})\n\nexport class ListUserComponent implements AfterViewInit, OnInit {\n\n  columnsToDisplay = ['name', 'username', 'userRole', 'edit', 'delete'];\n\n  users: IUser[];\n\n  userDataSource = new MatTableDataSource<IUser>();\n\n  params: IParam = {\n    pageNumber: 1,\n    pageSize: 5\n  };\n\n  length = 1;\n  pageSizeOptions: number[] = [5, 10, 25];\n  searchList = [{ key: 1, value: 'Username' }, { key: 2, value: 'Name' }];\n  selected = 'Username';\n\n  isLoading = true;\n\n  @ViewChild(MatSort) matSort: MatSort;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild('selectedSearchBy', { static: false }) selectedSearchBy;\n\n  constructor(\n    private matDialog: MatDialog,\n    private userService: UserService,\n    private alertService: AlertService,\n    private route: Router) { }\n\n  private getUsers(param: IParam) {\n    this.userService.get(this.params).subscribe((data) => {\n      this.userDataSource.data = data.users;\n      this.length = data.totalCount;\n      this.isLoading = false;\n    }, (error) => {\n      this.alertService.showAlert(error, 'Okay', 20000);\n    });\n  }\n\n  ngOnInit(): void {\n    this.getUsers(this.params);\n  }\n\n  ngAfterViewInit() {\n    this.matSort.sortChange.subscribe((sort: Sort) => {\n      this.params.sortBy = sort.active;\n      this.params.sortDirection = sort.direction;\n      this.getUsers(this.params);\n    });\n  }\n\n  applyFilter(filteredValue: string) {\n    this.isLoading = true;\n\n    console.log(filteredValue, this.selectedSearchBy.value);\n    this.paginator.pageIndex = 0;\n\n    this.params.searchBy = this.selectedSearchBy.value;\n    this.params.searchText = filteredValue;\n    this.params.pageNumber = 1;\n    this.getUsers(this.params);\n  }\n\n  change(event: PageEvent) {\n    this.isLoading = true;\n    setTimeout(() => {\n      this.params.pageNumber = event.pageIndex + 1;\n      this.params.pageSize = event.pageSize;\n      this.getUsers(this.params);\n    }, 500);\n  }\n\n  onAddNew() {\n    this.route.navigate(['/addUser']);\n  }\n\n  onDelete(username: string, id: number) {\n    const dialogRef = this.matDialog.open(DeleteUserComponent, { data: { username, id } });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result === true) {\n        this.getUsers(this.params);\n      }\n    });\n  }\n\n  onView(id: number) {\n    const dialogRef = this.matDialog.open(ViewUserComponent, { data: { id } });\n  }\n}\n","<mat-toolbar color=\"accent\">\n  <mat-toolbar-row fxLayout=\"row\"\n                   fxLayoutAlign=\"space-around center\"\n                   fxLayoutGap=\"10px\">\n    <div fxFlex=\"30\">\n      <span>User Setup</span>\n    </div>\n    <div fxFlex=\"70\"\n         fxLayout=\"row\"\n         fxLayoutAlign=\"end center\"\n         fxLayoutGap=\"10px\">\n      <span><button mat-flat-button\n                color=\"primary\"\n                type=\"button\"\n                (click)=\"onAddNew()\"\n                matTooltip=\"Add menu\">Add New</button></span>\n      <span><button mat-flat-button\n                color=\"primary\"\n                type=\"button\"\n                (click)=\"onAddNew()\"\n                matTooltip=\"Export\">Export</button></span>\n    </div>\n  </mat-toolbar-row>\n</mat-toolbar>\n<br>\n<div fxLayout=\"row\"\n     fxLayoutAlign=\"space-evenly center\">\n  <mat-form-field fxFlex=\"20%\">\n    <mat-label>Search By</mat-label>\n    <mat-select #selectedSearchBy\n                [(value)]=\"selected\">\n      <mat-option *ngFor=\"let item of searchList\"\n                  [value]=\"item.value\">\n        {{item.value}} </mat-option>\n    </mat-select>\n  </mat-form-field>\n  <mat-form-field fxFlex=\"40%\">\n    <mat-label>Filter</mat-label>\n    <input matInput\n           (keyup)=\"applyFilter($event.target.value)\"\n           placeholder=\"\">\n  </mat-form-field>\n\n</div>\n<table mat-table\n       [dataSource]=\"userDataSource\"\n       matSort>\n  <tr mat-header-row\n      *matHeaderRowDef=\"columnsToDisplay; sticky: true\"></tr>\n  <tr mat-row\n      *matRowDef=\"let myRowData; columns: columnsToDisplay\"></tr>\n  <ng-container matColumnDef=\"name\">\n    <th mat-header-cell\n        *matHeaderCellDef\n        mat-sort-header\n        [disabled]=\"isLoading\"> Name </th>\n    <td mat-cell\n        *matCellDef=\"let user\"> <button mat-button\n              (click)=\"onView(user.id)\"\n              color=\"primary\">{{user.name}}</button> </td>\n  </ng-container>\n  <ng-container matColumnDef=\"username\">\n    <th mat-header-cell\n        *matHeaderCellDef\n        mat-sort-header\n        [disabled]=\"isLoading\">Username </th>\n    <td mat-cell\n        *matCellDef=\"let user\"> {{user.username}} </td>\n  </ng-container>\n  <ng-container matColumnDef=\"userRole\">\n    <th mat-header-cell\n        *matHeaderCellDef>Role </th>\n    <td mat-cell\n        *matCellDef=\"let user\">\n      <code *ngFor=\"let role of user.userRole\">{{role.description}} | </code>\n    </td>\n  </ng-container>\n  <ng-container matColumnDef=\"edit\">\n    <th mat-header-cell\n        *matHeaderCellDef>Edit</th>\n    <td mat-cell\n        *matCellDef=\"let user\">\n      <button mat-icon-button\n              matTooltip=\"Edit or Change\"\n              matTooltipClass=\"example-tooltip-red\"\n              color=\"primary\"\n              [routerLink]=\"['/addUser',user.id]\"><i class=\"fa fa-edit\"></i></button>\n    </td>\n  </ng-container>\n  <ng-container matColumnDef=\"delete\">\n    <th mat-header-cell\n        *matHeaderCellDef>Delete</th>\n    <td mat-cell\n        *matCellDef=\"let user\">\n      <button mat-icon-button\n              matTooltip=\"Delete or Remove\"\n              matTooltipClass=\"example-tooltip-red\"\n              color=\"primary\"\n              (click)=\"onDelete(user.username, user.id)\"><i class=\"fa fa-trash\"></i></button>\n    </td>\n  </ng-container>\n</table>\n<mat-progress-bar mode=\"indeterminate\"\n                  *ngIf=\"!!isLoading\"></mat-progress-bar>\n<mat-paginator [length]=\"length\"\n               [pageSize]=\"params.pageSize\"\n               [pageSizeOptions]=\"pageSizeOptions\"\n               (page)=\"change($event)\"\n               [disabled]=\"isLoading\">\n</mat-paginator>\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { UserService } from 'src/user/services/user.service';\nimport { RouterLink, ActivatedRoute } from '@angular/router';\nimport { IUser } from 'src/_models/user-data';\nimport { AlertService } from 'src/_services/alert.service';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-view-user',\n  templateUrl: './view-user.component.html',\n  styleUrls: ['./view-user.component.css']\n})\nexport class ViewUserComponent implements OnInit {\n\n  id = 0;\n  user: IUser;\n\n  constructor(\n    private userService: UserService,\n    private route: ActivatedRoute,\n    private alertService: AlertService,\n    @Inject(MAT_DIALOG_DATA) public data: any\n  ) {\n    this.id = data.id;\n   }\n\n  ngOnInit() {\n    console.log(this.id);\n\n    if (this.id === undefined) {\n      this.id = 0;\n    }\n\n    this.userService.getById(this.id).subscribe(\n      (data) => {\n        this.user = data;\n      },\n      (error) => {\n        this.alertService.showAlert(error);\n      },\n      () => {\n        console.log(this.user);\n      });\n  }\n\n}\n","<h1 mat-dialog-title>Detail of {{user?.name}}</h1>\n<div mat-dialog-content>\n  <div>\n    Name: {{user?.name}} <br>\n    Username: {{user?.username}}<br>\n    Phone: {{user?.phone}}<br>\n    Email: {{user?.email}}<br>\n  </div>\n</div>\n<div mat-dialog-actions>\n  <button mat-button mat-dialog-close>Close</button>\n</div>","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { environment } from 'src/environments/environment';\nimport { Observable } from 'rxjs';\nimport { IUsers, IUserToSave, IUser, IChangePassword } from 'src/_models/user-data';\nimport { IParam } from 'src/_models/param';\nimport { Base } from '../../_services/base';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService extends Base{\n\n  private baseUrl = environment.apiUrl;\n\n  constructor(private http: HttpClient, private router: Router) {\n    super();\n  }\n\n  getById(id: number): Observable<IUser> {\n    if (id === 0) {\n      const user: IUser = {\n        id: 0,\n        name: '',\n        username: '',\n        email: '',\n        userRole: [],\n        isActive: true\n      };\n      return new Observable((observe) => {\n        observe.next(user);\n      });\n    } else {\n      return this.http.get<IUser>(this.baseUrl + 'user\\\\' + id);\n    }\n  }\n\n  get(parameters: IParam): Observable<IUsers> {\n    const httpParams = this.getHttpParams(parameters);\n    return this.http.get<IUsers>(this.baseUrl + 'user', { params: httpParams });\n  }\n\n  add(newUser: IUserToSave) {\n    console.log(newUser);\n    return this.http.post(this.baseUrl + 'user', newUser);\n  }\n\n  update(id: number, newUser: IUserToSave) {\n    return this.http.patch(this.baseUrl + 'user/' + id, newUser);\n  }\n\n  delete(id: number) {\n    return this.http.delete(this.baseUrl + 'user/' + id);\n  }\n\n  changePassword(changePassword: IChangePassword) {\n    console.log(changePassword);\n    return this.http.post(this.baseUrl + 'user/changepassword', changePassword);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\n\nimport { ListUserComponent } from './components/list/list-user.component';\nimport { AddUserComponent } from './components/add/add-user.component';\nimport { ViewUserComponent } from './components/view/view-user.component';\nimport { DeleteUserComponent } from './components/delete/delete-user.component';\nimport { MaterialModule } from 'src/app/material.module';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\n@NgModule({\n    declarations: [\n        ListUserComponent,\n        AddUserComponent,\n        DeleteUserComponent,\n        ViewUserComponent\n    ],\n    imports: [CommonModule,\n        ReactiveFormsModule,\n        RouterModule,\n        MaterialModule,\n        FlexLayoutModule],\n    entryComponents: [DeleteUserComponent],\n    exports: [\n        ListUserComponent,\n        AddUserComponent,\n        DeleteUserComponent,\n        ViewUserComponent\n    ]\n})\nexport class UserModule { }\n"],"sourceRoot":"webpack:///"}