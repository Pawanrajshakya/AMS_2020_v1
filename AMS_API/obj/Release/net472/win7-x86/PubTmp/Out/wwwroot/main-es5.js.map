{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/_services/alert.service.ts","webpack:///src/_services/auth.guard.ts","webpack:///src/_services/base.ts","webpack:///src/_services/error.interceptor.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/material.module.ts","webpack:///src/app/reducers/index.ts","webpack:///src/auth/auth.module.ts","webpack:///src/auth/components/changePassword/changePassword.component.ts","webpack:///src/auth/components/changePassword/changePassword.component.html","webpack:///src/auth/components/login/login.component.ts","webpack:///src/auth/components/login/login.component.html","webpack:///src/auth/services/auth.service.ts","webpack:///src/auth/store/auth.actions.ts","webpack:///src/auth/store/index.ts","webpack:///src/environments/environment.ts","webpack:///src/header/header.component.ts","webpack:///src/header/header.component.html","webpack:///src/home/home.component.ts","webpack:///src/home/home.component.html","webpack:///src/main.ts","webpack:///src/menu/components/menu-add/menu-add.component.ts","webpack:///src/menu/components/menu-add/menu-add.component.html","webpack:///src/menu/components/menu-delete/menu-delete.component.ts","webpack:///src/menu/components/menu-delete/menu-delete.component.html","webpack:///src/menu/components/menu-list/menu-list.component.ts","webpack:///src/menu/components/menu-list/menu-list.component.html","webpack:///src/menu/menu.module.ts","webpack:///src/menu/services/menu.service.ts","webpack:///src/role/components/list/list-role.component.ts","webpack:///src/role/components/list/list-role.component.html","webpack:///src/role/role.module.ts","webpack:///src/role/services/role.service.ts","webpack:///src/user/components/add/add-user.component.ts","webpack:///src/user/components/add/add-user.component.html","webpack:///src/user/components/delete/delete-user.component.ts","webpack:///src/user/components/delete/delete-user.component.html","webpack:///src/user/components/list/list-user.component.ts","webpack:///src/user/components/list/list-user.component.html","webpack:///src/user/components/view/view-user.component.ts","webpack:///src/user/components/view/view-user.component.html","webpack:///src/user/services/user.service.ts","webpack:///src/user/user.module.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AlertService","snackBar","horizontalPosition","verticalPosition","message","action","displayDuration","isError","open","duration","panelClass","providedIn","AuthGuard","router","authService","route","state","loggedIn","navigate","Base","parameters","httpParams","pageNumber","set","toString","pageSize","searchBy","searchText","sortBy","sortDirection","ErrorInterceptor","next","handle","pipe","error","status","statusText","applicationError","headers","get","serverError","modelStateError","key","errors","ErrorInterceptorProvider","provide","useClass","multi","routes","path","component","canActivate","AppRoutingModule","forRoot","imports","providers","AppComponent","matDialog","store","hideTitle","isAuthenticated$","usernameToDisplay$","subscribe","isAuthenticated","console","log","getCurrentUserMenu","menus","myMenu","logout","dialogRef","width","afterClosed","result","selector","templateUrl","styleUrls","AppModule","config","tokenGetter","getToken","whitelistedDomains","blacklistedRoutes","metaReducers","runtimeChecks","strictStateImmutability","strictActionImmutability","instrument","maxAge","logOnly","production","declarations","bootstrap","localStorage","getItem","MaterialModule","reducers","AuthModule","forFeature","entryComponents","ChangePasswordComponent","userService","alertService","changePasswordForm","oldPassword","required","newPassword","confirmedNewPassword","validators","passwordCompareValidator","changePassword","value","username","currentUser","data","showAlert","close","changed","onSubmit","control","passwordCompare","LoginComponent","loginForm","password","valid","login","AuthService","http","jwtHelper","baseUrl","apiUrl","model","dispatch","post","response","user","setItem","token","decodedToken","decodeToken","getCurrentUser","nameid","isTokenExpired","removeItem","getById","loadAuths","loadAuthsSuccess","loadAuthsFailure","loginStateFeatureKey","initialState","undefined","selectAuthFeature","selectIsAuthenticated","selectAuthenticatedUser","environment","HeaderComponent","HomeComponent","bootstrapModule","err","MenuAddComponent","menuService","roleService","mainMenus","title","roleParam","menuForm","maxLength","link","iconName","selectedMainMenu","sortId","isActive","selectedUserRole","snapshot","params","setValue","roles","getMainMenus","forEach","element","push","menu","mainMenuId","menuToSave","userRoles","join","add","update","onCancel","MenuDeleteComponent","onDelete","MenuListComponent","columnsToDisplay","dataSource","length","pageSizeOptions","searchList","selected","isLoading","param","totalCount","getMenus","matSort","sortChange","sort","active","direction","filteredValue","selectedSearchBy","paginator","pageIndex","event","setTimeout","onAddNew","applyFilter","change","MenuModule","MenuService","observe","getHttpParams","newMenu","patch","ListRoleComponent","getRoles","RoleModule","RoleService","description","newRole","AddUserComponent","signUpForm","name","minLength","email","phone","userRole","DeleteUserComponent","ListUserComponent","userDataSource","users","getUsers","ViewUserComponent","UserService","newUser","UserModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\nimport { MatSnackBar, MatSnackBarVerticalPosition, MatSnackBarHorizontalPosition } from '@angular/material/snack-bar';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AlertService {\n\n  constructor(private snackBar: MatSnackBar) { }\n\n  horizontalPosition: MatSnackBarHorizontalPosition = 'center';\n  verticalPosition: MatSnackBarVerticalPosition = 'top';\n\n  showAlert(message: string, action: string = '', displayDuration: number = 2000, isError: boolean = false) {\n    this.snackBar.open(message, action, {\n      duration: displayDuration,\n      horizontalPosition: this.horizontalPosition,\n      verticalPosition: this.verticalPosition,\n      panelClass: isError ? ['error-snackbar'] : ['message-snackbar']\n    });\n  }\n\n}\n","import { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { Injectable } from '@angular/core';\nimport { AuthService } from '../auth/services/auth.service';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n\n    constructor(private router: Router, private authService: AuthService) { }\n\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n        if (this.authService.loggedIn()) {\n            return true;\n        } else {\n            this.router.navigate(['/login']);\n        }\n    }\n\n}\n","import { HttpParams } from '@angular/common/http';\nimport { IParam } from 'src/_models/param';\n\nexport class Base {\n\n    getHttpParams(parameters: IParam): HttpParams {\n        let httpParams = new HttpParams();\n\n        if (parameters.pageNumber) {\n            if (parameters.pageNumber === 0) {\n                parameters.pageNumber = 1;\n            }\n            httpParams = httpParams.set('pageNumber', parameters.pageNumber.toString());\n        }\n        if (parameters.pageSize) {\n            if (parameters.pageSize === 0) {\n                parameters.pageSize = 50;\n            }\n            httpParams = httpParams.set('pageSize', parameters.pageSize.toString());\n        }\n        if (parameters.searchBy) {\n            httpParams = httpParams.set('searchBy', parameters.searchBy || '');\n        }\n        if (parameters.searchText) {\n            httpParams = httpParams.set('searchText', parameters.searchText);\n        }\n        if (parameters.sortBy) {\n            httpParams = httpParams.set('sortBy', parameters.sortBy);\n        }\n        if (parameters.sortDirection) {\n            httpParams = httpParams.set('sortDirection', parameters.sortDirection);\n        }\n\n        return httpParams;\n    }\n}\n","import { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent, HttpErrorResponse, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { catchError } from 'rxjs/operators';\nimport { throwError } from 'rxjs';\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n    intercept(\n        req: HttpRequest<any>,\n        next: HttpHandler\n    ): import('rxjs').Observable<HttpEvent<any>> {\n        return next.handle(req).pipe(\n            catchError(error => {\n                if (error.status === 401) {\n                    return throwError(error.statusText);\n                }\n\n                if (error instanceof HttpErrorResponse) {\n                    const applicationError = error.headers.get('Application-Error');\n                    if (applicationError) {\n                        throwError(applicationError);\n                    }\n\n                    const serverError = error.error;\n                    let modelStateError = '';\n                    if (serverError && typeof serverError === 'object') {\n                        for (const key in serverError.errors) {\n                            if (serverError.errors[key]) {\n                                modelStateError += serverError.errors[key] + '\\n';\n                            }\n                        }\n                    }\n                    return throwError(modelStateError || serverError || 'Server Error');\n                }\n            })\n        );\n    }\n}\n\nexport const ErrorInterceptorProvider = {\n    provide: HTTP_INTERCEPTORS,\n    useClass: ErrorInterceptor,\n    multi: true\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from 'src/home/home.component';\nimport { AuthGuard } from 'src/_services/auth.guard';\nimport { AddUserComponent } from 'src/user/components/add/add-user.component';\nimport { ListUserComponent } from 'src/user/components/list/list-user.component';\nimport { LoginComponent } from 'src/auth/components/login/login.component';\nimport { ListRoleComponent } from 'src/role/components/list/list-role.component';\nimport { MenuListComponent } from 'src/menu/components/menu-list/menu-list.component';\nimport { MenuAddComponent } from 'src/menu/components/menu-add/menu-add.component';\n\nconst routes: Routes = [\n    { path: '', component: HomeComponent },\n    { path: 'home', component: HomeComponent },\n    { path: 'addUser', component: AddUserComponent, canActivate: [AuthGuard] },\n    { path: 'addUser/:id', component: AddUserComponent, canActivate: [AuthGuard] },\n    { path: 'user', component: ListUserComponent, canActivate: [AuthGuard] },\n    { path: 'role', component: ListRoleComponent, canActivate: [AuthGuard] },\n    { path: 'menu', component: MenuListComponent, canActivate: [AuthGuard] },\n    { path: 'addMenu', component: MenuAddComponent, canActivate: [AuthGuard] },\n    { path: 'addMenu/:id', component: MenuAddComponent, canActivate: [AuthGuard] },\n    { path: 'login', component: LoginComponent }\n];\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes)],\n    exports: [RouterModule],\n    providers: [AuthGuard]\n})\nexport class AppRoutingModule { }\n","import { Component, ViewChild, OnInit, OnDestroy, AfterContentInit } from '@angular/core';\nimport { MatAccordion } from '@angular/material/expansion/accordion';\nimport { AuthService } from 'src/auth/services/auth.service';\nimport { Observable } from 'rxjs';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ChangePasswordComponent } from 'src/auth/components/changePassword/changePassword.component';\nimport { LoginState, selectIsAuthenticated, selectAuthenticatedUser } from 'src/auth/store';\nimport { Store, select } from '@ngrx/store';\nimport { IMenu } from 'src/_models/menu-data';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements AfterContentInit {\n\n  private hideTitle = false;\n\n  @ViewChild('accordion', { static: true }) Accordion: MatAccordion;\n\n  myMenu: IMenu[];\n\n  isAuthenticated$: Observable<boolean>;\n  usernameToDisplay$: Observable<string>;\n\n  constructor(\n    private authService: AuthService,\n    private matDialog: MatDialog,\n    private store: Store<LoginState>) { }\n\n  ngAfterContentInit(): void {\n    this.isAuthenticated$ = this.store.pipe(select(selectIsAuthenticated));\n    this.usernameToDisplay$ = this.store.pipe(select(selectAuthenticatedUser));\n\n    this.isAuthenticated$.subscribe((isAuthenticated) => {\n      console.log('isAuthenticated', isAuthenticated);\n      if (isAuthenticated) {\n        this.authService.getCurrentUserMenu().subscribe((menus) => {\n          console.log('menus', menus);\n          this.myMenu = menus;\n        })\n      }\n    })\n  }\n\n  onSignOut() {\n    this.authService.logout();\n  }\n\n  onChangePassword(): void {\n    const dialogRef = this.matDialog.open(ChangePasswordComponent, { width: '300px' });\n\n    dialogRef.afterClosed().subscribe(result => {\n      console.log(result);\n    });\n  }\n}\n","<mat-toolbar color=\"primary\">\n  <div fxFlex\n       fxLayout=\"row\"\n       fxLayoutGap=\"10px\">\n    <div><i class=\"fa fa-bars\"\n         (click)=\"sidenav.toggle()\"></i></div>\n    <div> <a routerLink=\"/\">AMS</a></div>\n  </div>\n  <div fxFlex\n       fxLayout\n       fxLayoutAlign=\"flex-end\">\n    <ul fxLayout\n        fxLayoutGap=\"16px\"\n        class=\"navigation-items\">\n      <li *ngIf=\"!!(isAuthenticated$ | async)\">Welcome {{(usernameToDisplay$ | async).toUpperCase()}}</li>\n      <li *ngIf=\"!!(isAuthenticated$ | async)\"\n          (click)=\"onChangePassword()\"\n          matTooltip=\"Change Password\"><i class=\"fa fa-key\"></i></li>\n      <li><a routerLink=\"/login\"\n           *ngIf=\"!(isAuthenticated$ | async)\"\n           matTooltip=\"Sign In\">Sign In <i class=\"fa fa-sign-in\"></i></a></li>\n      <li><a routerLink=\"/login\"\n           (click)=\"onSignOut()\"\n           *ngIf=\"!!(isAuthenticated$ | async)\"\n           matTooltip=\"Sign Out\"><i class=\"fa fa-sign-out\"></i></a></li>\n    </ul>\n  </div>\n</mat-toolbar>\n<mat-drawer-container autosize>\n  <mat-drawer #sidenav\n              role=\"heading\"\n              mode=\"side\"\n              opened>\n    <mat-nav-list *ngIf=\"!!(isAuthenticated$ | async)\">\n      <mat-accordion displayMode=\"flat\"\n                     multi=\"true\"\n                     #accordion=\"matAccordion\">\n        <div *ngFor=\"let menu of myMenu\">\n          <div *ngIf=\"menu.subMenu?.length === 0\">\n            <a mat-list-item\n               [routerLink]=\"menu.link\"> <i [class]=\"menu.iconName\"></i><span\n                    class=\"mat-list-item-text\">{{menu.title}}</span></a>\n          </div>\n          <div *ngIf=\"menu.subMenu?.length > 0\">\n            <mat-expansion-panel [expanded]=\"menu.isExpanded\">\n              <mat-expansion-panel-header>\n                <mat-panel-title>\n                  <i [class]=\"menu.iconName\"></i><span class=\"mat-list-item-text\">{{menu.title}}</span>\n                </mat-panel-title>\n              </mat-expansion-panel-header>\n              <mat-list>\n                <a [routerLink]=\"item.link\" mat-list-item *ngFor=\"let item of menu.subMenu\">\n                  <i [class]=\"item.iconName\"></i><span class=\"mat-list-item-text subMenu\">{{item.title}}</span> </a>\n              </mat-list>\n            </mat-expansion-panel>\n          </div>\n        </div>\n      </mat-accordion>\n    </mat-nav-list>\n  </mat-drawer>\n  <mat-drawer-content>\n    <main>\n      <router-outlet></router-outlet>\n    </main>\n  </mat-drawer-content>\n</mat-drawer-container>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { JwtModule } from '@auth0/angular-jwt';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { HttpClientModule } from '@angular/common/http';\nimport { StoreModule } from '@ngrx/store';\n\n\nimport { MaterialModule } from 'src/app/material.module';\nimport { AppRoutingModule } from 'src/app/app-routing.module';\nimport { AppComponent } from 'src/app/app.component';\nimport { HomeComponent } from 'src/home/home.component';\nimport { HeaderComponent } from 'src/header/header.component';\nimport { AuthService } from 'src/auth/services/auth.service';\nimport { AlertService } from 'src/_services/alert.service';\nimport { ErrorInterceptorProvider } from 'src/_services/error.interceptor';\nimport { reducers, metaReducers } from './reducers';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\nimport { environment } from '../environments/environment';\nimport { UserModule } from 'src/user/user.module';\nimport { AuthModule } from 'src/auth/auth.module';\nimport { RoleModule } from 'src/role/role.module';\nimport { MenuModule } from 'src/menu/menu.module';\n\n@NgModule({\n   declarations: [\n      AppComponent,\n      HomeComponent,\n      HeaderComponent,\n   ],\n   imports: [\n      BrowserModule,\n      ReactiveFormsModule,\n      BrowserAnimationsModule,\n      MaterialModule,\n      AppRoutingModule,\n      FlexLayoutModule,\n      HttpClientModule,\n      AuthModule,\n      UserModule,\n      RoleModule,\n      MenuModule,\n      JwtModule.forRoot({\n         config: {\n            tokenGetter: getToken,\n            whitelistedDomains: ['localhost:5000'],\n            blacklistedRoutes: []\n         }\n      }),\n      StoreModule.forRoot(reducers, {\n         metaReducers,\n         runtimeChecks: {\n            strictStateImmutability: true,\n            strictActionImmutability: true,\n         },\n      }),\n      StoreDevtoolsModule.instrument({ maxAge: 25, logOnly: environment.production })\n   ],\n   providers: [\n      AuthService, AlertService, ErrorInterceptorProvider\n   ],\n   bootstrap: [\n      AppComponent\n   ]\n})\nexport class AppModule { }\n\nexport function getToken() {\n   return localStorage.getItem('token');\n}\n","import { NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatListModule } from '@angular/material/list';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport {MatCardModule} from '@angular/material/card';\n\n@NgModule({\n  imports: [MatButtonModule, MatInputModule,\n    MatFormFieldModule, MatDatepickerModule,\n    MatNativeDateModule, MatCheckboxModule,\n    MatSelectModule, MatSidenavModule,\n    MatToolbarModule, MatListModule,\n    MatExpansionModule, MatMenuModule,\n    MatTableModule, MatPaginatorModule,\n    MatSortModule, MatSnackBarModule,\n    MatProgressBarModule, MatTooltipModule,\n    MatDialogModule, MatCardModule],\n  exports: [MatButtonModule, MatInputModule,\n    MatFormFieldModule, MatDatepickerModule,\n    MatNativeDateModule, MatCheckboxModule,\n    MatSelectModule, MatSidenavModule,\n    MatToolbarModule, MatListModule,\n    MatExpansionModule, MatMenuModule,\n    MatTableModule, MatPaginatorModule,\n    MatSortModule, MatSnackBarModule,\n    MatProgressBarModule, MatTooltipModule,\n    MatDialogModule, MatCardModule]\n})\nexport class MaterialModule { }\n","import {\n  ActionReducer,\n  ActionReducerMap,\n  createFeatureSelector,\n  createSelector,\n  MetaReducer\n} from '@ngrx/store';\nimport { environment } from '../../environments/environment';\n\n\nexport interface AMSState {\n\n}\n\nexport const reducers: ActionReducerMap<AMSState> = {\n\n};\n\n\nexport const metaReducers: MetaReducer<AMSState>[] = !environment.production ? [] : [];\n","import { NgModule } from '@angular/core';\nimport { LoginComponent } from './components/login/login.component';\nimport { ChangePasswordComponent } from './components/changePassword/changePassword.component';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MaterialModule } from 'src/app/material.module';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { StoreModule } from '@ngrx/store';\nimport * as fromLoginState from './store';\n\n@NgModule({\n    declarations: [\n        LoginComponent,\n        ChangePasswordComponent\n    ],\n    imports: [CommonModule,\n        RouterModule,\n        ReactiveFormsModule,\n        MaterialModule,\n        FlexLayoutModule,\n        StoreModule.forFeature(\n            fromLoginState.loginStateFeatureKey,\n            fromLoginState.reducers, {\n            metaReducers: fromLoginState.metaReducers\n        })],\n    entryComponents: [\n        ChangePasswordComponent],\n    exports: [\n        LoginComponent,\n        ChangePasswordComponent\n    ]\n})\n\nexport class AuthModule {\n}\n","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { AuthService } from 'src/auth/services/auth.service';\nimport { FormGroup, FormControl, Validators, ValidatorFn, ValidationErrors } from '@angular/forms';\nimport { AppComponent } from 'src/app/app.component';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { UserService } from 'src/user/services/user.service';\nimport { AlertService } from 'src/_services/alert.service';\n\n\n@Component({\n  selector: 'app-change-password',\n  templateUrl: './changePassword.component.html',\n  styleUrls: ['./changePassword.component.css']\n})\nexport class ChangePasswordComponent implements OnInit {\n\n\n  changePasswordForm: FormGroup;\n\n  constructor(\n    private userService: UserService,\n    private authService: AuthService,\n    private alertService: AlertService,\n    public dialogRef: MatDialogRef<AppComponent>) { }\n\n  ngOnInit() {\n    this.changePasswordForm = new FormGroup({\n      oldPassword: new FormControl('', [Validators.required]),\n      newPassword: new FormControl('', [Validators.required]),\n      confirmedNewPassword: new FormControl('', [Validators.required])\n    }, { validators: passwordCompareValidator });\n  }\n\n  onSubmit() {\n    this.userService.changePassword({\n      oldPassword: this.changePasswordForm.get('oldPassword').value,\n      newPassword: this.changePasswordForm.get('newPassword').value,\n      username: this.authService.currentUser.username\n    }).subscribe(\n      (data) => {\n        this.alertService.showAlert('Password changed successfully.');\n        this.dialogRef.close({ changed: true });\n      },\n      (error) => {\n        this.alertService.showAlert(error);\n      });\n  }\n}\n\nexport const passwordCompareValidator: ValidatorFn =\n  (control: FormGroup): ValidationErrors | null => {\n    const newPassword = control.get('newPassword');\n    const confirmedNewPassword = control.get('confirmedNewPassword');\n    if (newPassword.value !== confirmedNewPassword.value) {\n      return { passwordCompare: true };\n    }\n    return null;\n  }","<section>\n  <form [formGroup]='changePasswordForm'\n        (ngSubmit)=\"onSubmit()\"\n        fxLayout=\"column\"\n        fxLayoutAlign=\"space-between center\"\n        fxLayoutGap=\"10px\">\n    <mat-form-field>\n      <input type=\"text\"\n             #oldPassword\n             formControlName='oldPassword'\n             placeholder=\"Old Password\"\n             matInput>\n      <mat-error *ngIf=\"!changePasswordForm.get('oldPassword').valid && changePasswordForm.get('oldPassword').touched\">\n        <mat-error *ngIf=\"changePasswordForm.get('oldPassword').errors['required']\">Username is required.</mat-error>\n      </mat-error>\n    </mat-form-field>\n    <mat-form-field>\n      <input type=\"password\"\n             #newPassword\n             formControlName='newPassword'\n             placeholder=\"New Password\"\n             matInput>\n      <mat-error *ngIf=\"!changePasswordForm.get('newPassword').valid && changePasswordForm.get('newPassword').touched\">\n        <mat-error *ngIf=\"changePasswordForm.get('newPassword').errors['required']\">Password is required.</mat-error>\n      </mat-error>\n    </mat-form-field>\n    <mat-form-field>\n      <input type=\"password\"\n             #confirmedNewPassword\n             formControlName='confirmedNewPassword'\n             placeholder=\"Confirmed New Password\"\n             matInput>\n      <mat-error\n                 *ngIf=\"!changePasswordForm.get('confirmedNewPassword').valid && changePasswordForm.get('confirmedNewPassword').touched\">\n        <mat-error *ngIf=\"changePasswordForm.get('confirmedNewPassword').errors['required']\">Password is required.\n        </mat-error>\n      </mat-error>\n    </mat-form-field>\n    <mat-error class=\"message\"\n               *ngIf=\"changePasswordForm.errors?.passwordCompare\">Password does not matched.\n    </mat-error>\n    <div mat-dialog-actions>\n      <button mat-raised-button\n              [disabled]=\"!changePasswordForm.valid\"\n              color=\"primary\"\n              type=\"submit\">Change</button>\n      <button mat-raised-button\n              color=\"accent\"\n              type=\"button\"\n              [mat-dialog-close]=\"false\"\n              cdkFocusInitial>Cancel</button>\n    </div>\n  </form>\n</section>\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { AuthService } from 'src/auth/services/auth.service';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  loginForm: FormGroup;\n\n  constructor(\n    private authService: AuthService) { }\n\n  ngOnInit(): void {\n\n    this.loginForm = new FormGroup({\n      username: new FormControl('sysadmin', [Validators.required]),\n      password: new FormControl('password', [Validators.required])\n    });\n  }\n\n  onSubmit() {\n    if (this.loginForm.valid) {\n      this.authService\n        .login({\n          username: this.loginForm.value.username,\n          password: this.loginForm.value.password\n        });\n    }\n  }\n}\n\n// forbiddenNameValidator(control: FormControl): { [s: string]: boolean } {\n  //   if (this.forbiddenNames.indexOf(control.value) !== -1) {\n  //     return { nameIsForbidden: true };\n  //   }\n  //   return null;\n  // }\n\n  // forbiddenEmailValidatorAsync(control: FormControl): Promise<any> | Observable<any> {\n  //   const prmoise = new Promise((resolve, reject) => {\n  //     setTimeout(() => {\n  //       if (control.value === 'test@test.test') {\n  //         resolve({ emailIsForbidden: true });\n  //       } else {\n  //         resolve(null);\n  //       }\n  //     }, 1500);\n  //   });\n  //   return prmoise;\n  // }\n  //forbiddenNames = ['sa', 'user', 'password', 'username', ' ', '1', 'test'];\n\n  // genders = ['Male', 'Female', 'Unknown'];\n\n  // ngOnInit() {\n\n  //   this.login();\n\n  //   this.loginForm = new FormGroup({\n  //     userData: new FormGroup({\n  //       username: new FormControl(null, [Validators.required, this.forbiddenNameValidator.bind(this)]),\n  //       email: new FormControl('@gmail.com', [Validators.required, Validators.email], this.forbiddenEmailValidatorAsync),\n  //     }),\n  //     gender: new FormControl('Male')\n  //   });\n  // }\n\n  // onSubmit() {\n  //   console.log(this.loginForm);\n  // }\n\n\n\n  // forbiddenEmailValidatorAsync(control: FormControl): Promise<any> | Observable<any> {\n  //   const prmoise = new Promise((resolve, reject) => {\n  //     setTimeout(() => {\n  //       if (control.value === 'test@test.test') {\n  //         resolve({ emailIsForbidden: true });\n  //       } else {\n  //         resolve(null);\n  //       }\n  //     }, 1500);\n  //   });\n  //   return prmoise;\n  // }\n\n  // login() {\n  //   this.authService\n  //     .login({ username: \"pawanrajshakya\", password: \"password\" })\n  //     .subscribe(next => {\n  //       console.log('logged in successfully.')\n  //     }, error => {\n  //       console.error('logged in failed.')\n  //     })\n  // }\n","<section>\n  <form [formGroup]='loginForm'\n        (ngSubmit)=\"onSubmit()\"\n        fxLayout=\"column\"\n        fxLayoutAlign=\"space-between center\"\n        fxLayoutGap=\"10px\">\n    <mat-form-field>\n      <input type=\"text\"\n             #username\n             formControlName='username'\n             placeholder=\"Username\"\n             matInput>\n      <mat-error *ngIf=\"!loginForm.get('username').valid && loginForm.get('username').touched\">\n        <mat-error *ngIf=\"loginForm.get('username').errors['required']\">Username is required.</mat-error>\n      </mat-error>\n    </mat-form-field>\n    <mat-form-field>\n      <input type=\"password\"\n             #password\n             formControlName='password'\n             placeholder=\"Password\"\n             matInput>\n      <mat-error *ngIf=\"!loginForm.get('password').valid && loginForm.get('password').touched\">\n        <mat-error *ngIf=\"loginForm.get('password').errors['required']\">Password is required.</mat-error>\n      </mat-error>\n    </mat-form-field>\n    <div fxLayout=\"row\">\n      <button mat-raised-button\n              [disabled]=\"!loginForm.valid\"\n              color=\"primary\"\n              type=\"submit\">Login</button>\n    </div>\n  </form>\n</section>\n\n<!-- <div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col-xs-12 col-sm-10 col-md-8 col-sm-offset-1 col-md-offset-2\">\n      <form [formGroup]='loginForm'\n            (ngSubmit)=\"onSubmit()\">\n        <div formGroupName=\"userData\">\n          <mat-form-field>\n            <label for=\"username\">Username</label>\n            <input type=\"text\"\n                   id=\"username\"\n                   formControlName='username'\n                   matInput>\n            <span *ngIf=\"!loginForm.get('userData.username').valid && loginForm.get('userData.username').touched\"\n                  class=\"help-block\">\n              <span *ngIf=\"loginForm.get('userData.username').errors['nameIsForbidden']\"\n                    class=\"help-block\">Username is invalid.</span>\n              <span *ngIf=\"loginForm.get('userData.username').errors['required']\"\n                    class=\"help-block\">Username is required.</span>\n            </span>\n          </mat-form-field>\n          <div class=\"form-group\">\n            <label for=\"email\">email</label>\n            <input type=\"text\"\n                   id=\"email\"\n                   formControlName='email'\n                   class=\"form-control\">\n            <div *ngIf=\"!loginForm.get('userData.email').valid && loginForm.get('userData.email').touched\"\n                 class=\"help-block\">Valid email address is required.</div>\n          </div>\n        </div>\n        <div class=\"radio\"\n             *ngFor=\"let gender of genders\">\n          <label>\n            <input type=\"radio\"\n                   formControlName=\"gender\"\n                   [value]=\"gender\">{{ gender }}\n          </label>\n        </div>\n        <button mat-raised-button color=\"primary\"\n                type=\"submit\"><i class=\"fa fa-sign-in\"></i> Submit</button>\n      </form>\n    </div>\n  </div>\n</div> -->\n","import { Injectable, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { Store } from '@ngrx/store';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { Router } from '@angular/router';\n\nimport { IAuthData } from 'src/_models/auth-data';\nimport { environment } from 'src/environments/environment';\nimport { IUser } from 'src/_models/user-data';\nimport { UserService } from '../../user/services/user.service';\n\nimport { AlertService } from '../../_services/alert.service';\nimport { LoginState } from 'src/auth/store';\n\nimport * as fromAction from '../store/auth.actions';\nimport { IMenus, IMenu } from 'src/_models/menu-data';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class AuthService {\n\n  private jwtHelper = new JwtHelperService();\n\n  decodedToken: any;\n\n  private baseUrl = environment.apiUrl;\n\n  currentUser: IUser;\n\n  constructor(\n    private http: HttpClient,\n    private router: Router,\n    private userService: UserService,\n    private alertService: AlertService,\n    private store: Store<LoginState>) {\n    this.loggedIn();\n  }\n\n  login(model: IAuthData) {\n\n    this.store.dispatch(fromAction.loadAuths());\n\n    return this.http.post(this.baseUrl + 'auth/login', model).pipe(\n      map((response: any) => {\n        console.log(response);\n        const user = response;\n        if (user) {\n          localStorage.setItem('token', user.token);\n          this.decodedToken = this.jwtHelper.decodeToken(user.token);\n          this.getCurrentUser(this.decodedToken.nameid);\n          // this.authChange.next(true);\n          this.router.navigate(['/home']);\n          console.log(this.decodedToken);\n        }\n      })\n    ).subscribe(next => {\n      this.alertService.showAlert('logged in successfully.', 'Close');\n      this.store.dispatch(fromAction.loadAuthsSuccess({ data: model }));\n    }, error => {\n      this.alertService.showAlert(error, 'Close', 6000, true);\n      this.store.dispatch(fromAction.loadAuthsFailure({ error }));\n    });\n  }\n\n  loggedIn() {\n    const token = localStorage.getItem('token');\n    if (!this.jwtHelper.isTokenExpired(token)) {\n      this.decodedToken = this.jwtHelper.decodeToken(token);\n      this.getCurrentUser(this.decodedToken.nameid);\n      return true;\n    }\n    this.store.dispatch(fromAction.loadAuthsFailure({ error: 'Token Expired.' }));\n    return false;\n  }\n\n  logout() {\n    this.store.dispatch(fromAction.loadAuthsFailure({ error: 'Logged Out.' }));\n    localStorage.removeItem('token');\n    this.router.navigate(['/login']);\n  }\n\n  getCurrentUser(id: number) {\n    this.userService.getById(id).subscribe((data) => {\n      this.currentUser = data;\n      this.store.dispatch(fromAction.loadAuthsSuccess({ data: { username: this.currentUser.username, password: '' } }));\n      console.log(this.currentUser);\n    });\n  }\n\n  getCurrentUserMenu(){\n    return this.http.get<IMenu[]>(this.baseUrl + 'menu\\\\mymenu');\n  }\n\n}\n","import { createAction, props } from '@ngrx/store';\nimport { IAuthData } from 'src/_models/auth-data';\n\nexport const loadAuths = createAction(\n  '[Auth: Login Component] Load Auths'\n);\n\nexport const loadAuthsSuccess = createAction(\n  '[Auth: Login Component] Load Auths Success',\n  props<{ data: IAuthData }>()\n);\n\nexport const loadAuthsFailure = createAction(\n  '[Auth: Login Component] Load Auths Failure',\n  props<{ error: any }>()\n);\n","import {\n  ActionReducer,\n  ActionReducerMap,\n  createFeatureSelector,\n  createSelector,\n  MetaReducer,\n  createReducer,\n  on\n} from '@ngrx/store';\nimport { environment } from '../../environments/environment';\nimport { IAuthData } from 'src/_models/auth-data';\nimport { loadAuthsSuccess, loadAuthsFailure } from './auth.actions';\n\nexport const loginStateFeatureKey = 'loginState';\n\nexport interface LoginState {\n  isAuthenticated: boolean;\n  data: IAuthData;\n}\n\nexport const initialState: LoginState = { isAuthenticated: false, data: undefined };\n\nexport const reducers = createReducer(\n  initialState,\n  on(loadAuthsSuccess, (state, action) => {\n    return {\n      isAuthenticated: true,\n      data: action.data\n    };\n  }),\n  on(loadAuthsFailure, (state, action) => {\n    return {\n      isAuthenticated: false,\n      data: state.data\n    };\n  })\n);\n\nexport const selectAuthFeature = createFeatureSelector<LoginState>(\n  loginStateFeatureKey\n);\n\nexport const selectIsAuthenticated = createSelector(\n  selectAuthFeature,\n  (state: LoginState) => state.isAuthenticated\n);\n\nexport const selectAuthenticatedUser = createSelector(\n  selectAuthFeature,\n  (state: LoginState) => state.isAuthenticated ? state.data.username : ''\n);\n\nexport const metaReducers: MetaReducer<LoginState>[] = !environment.production ? [] : [];\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: 'http://localhost:5000/api/'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<p>\n  header works!\n</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<p>\n  home works!\n</p>\n","//import 'hammerjs';\n\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { AlertService } from 'src/_services/alert.service';\nimport { IParam } from 'src/_models/param';\nimport { IMenu, IMainMenu, IMenuToSave } from 'src/_models/menu-data';\nimport { MenuService } from 'src/menu/services/menu.service';\nimport { RoleService } from 'src/role/services/role.service';\nimport { IRole } from 'src/_models/role-data';\n\n@Component({\n  selector: 'app-menu-add',\n  templateUrl: './menu-add.component.html',\n  styleUrls: ['./menu-add.component.css']\n})\nexport class MenuAddComponent implements OnInit {\n\n  menuForm: FormGroup;\n\n  roles: IRole[];\n  mainMenus: IMainMenu[] = [{ id: 0, title: 'None' }];\n  menu: IMenu;\n  menuToSave: IMenuToSave;\n  id = 0;\n  roleParam: IParam = {};\n\n  constructor(\n    private menuService: MenuService,\n    private roleService: RoleService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private alertService: AlertService) { }\n\n  ngOnInit() {\n\n    this.menuForm = new FormGroup({\n      id: new FormControl(0),\n      title: new FormControl('', [Validators.required, Validators.maxLength(100)]),\n      link: new FormControl('', [Validators.required, Validators.maxLength(100)]),\n      iconName: new FormControl('', [Validators.required, Validators.maxLength(100)]),\n      selectedMainMenu: new FormControl([]),\n      sortId: new FormControl(0, [Validators.required]),\n      isActive: new FormControl(true),\n      selectedUserRole: new FormControl([], [Validators.required])\n    });\n    \n    this.id = this.route.snapshot.params.id;\n\n    if (this.id === undefined) {\n      this.id = 0;\n      this.menuForm.get('selectedMainMenu').setValue(0);\n    }\n\n    this.roleService.get(this.roleParam).subscribe((data) => {\n      console.log(data);\n      this.roles = data.roles;\n    }, (error) => {\n      this.alertService.showAlert(error);\n    });\n\n    this.menuService.getMainMenus(this.id).subscribe(data => {\n      data.forEach(element => {\n        this.mainMenus.push({ id: element.id, title: element.title });\n      });\n    }, error => {\n      this.alertService.showAlert(error);\n    });\n\n    \n\n    this.menuService.getById(this.id).subscribe(\n      (data) => {\n        this.menu = data;\n      },\n      (error) => {\n        this.alertService.showAlert(error);\n      },\n      () => {\n        console.log(1, this.menu);\n        this.menuForm.get('id').setValue(this.menu.id);\n        this.menuForm.get('title').setValue(this.menu.title);\n        this.menuForm.get('link').setValue(this.menu.link);\n        this.menuForm.get('iconName').setValue(this.menu.iconName);\n        this.menuForm.get('sortId').setValue(this.menu.sortId);\n        this.menuForm.get('isActive').setValue(this.menu.isActive);\n        const roles = [];\n\n        this.menu.roles.forEach(element => {\n          roles.push(element.id);\n        });\n\n        this.menuForm.get('selectedMainMenu').setValue(this.menu.mainMenuId);\n\n        this.menuForm.get('selectedUserRole').setValue(roles);\n      });\n\n  }\n\n  onSubmit() {\n\n    this.menuToSave = {\n      iconName: this.menuForm.get('iconName').value,\n      title: this.menuForm.get('title').value,\n      link: this.menuForm.get('link').value,\n      mainMenuId: this.menuForm.get('selectedMainMenu').value,\n      sortId: this.menuForm.get('sortId').value,\n      isActive: this.menuForm.get('isActive').value,\n      userRoles: this.menuForm.get('selectedUserRole').value.join(',')\n    };\n    console.log('???', this.menuToSave);\n    if (this.id === 0) {\n      this.menuService.add(this.menuToSave).subscribe((response) => {\n        this.router.navigate(['/menu']);\n      }, (error) => {\n        this.alertService.showAlert(error);\n      });\n    } else {\n      this.menuService.update(this.id, this.menuToSave).subscribe((response) => {\n        this.router.navigate(['/menu']);\n      }, (error) => {\n        this.alertService.showAlert(error);\n      });\n    }\n  }\n\n  onCancel() {\n    this.router.navigate(['/menu']);\n  }\n}\n","<section>\n  <form [formGroup]=\"menuForm\"\n        (ngSubmit)=\"onSubmit()\"\n        fxLayout=\"column\"\n        fxLayoutAlign=\"space-between center\"\n        fxLayoutGap=\"10px\">\n    <mat-form-field hintLabel=\"Maximum length is 100\">\n      <input type=\"text\"\n             #title\n             formControlName=\"title\"\n             placeholder=\"Title\"\n             matInput>\n      <mat-hint align=\"end\">{{title.value.length}}/100</mat-hint>\n      <mat-error *ngIf=\"!menuForm.get('title').valid && menuForm.get('title').touched\">\n        <mat-error *ngIf=\"menuForm.get('title').errors['required']\">Title is required.</mat-error>\n        <mat-error *ngIf=\"menuForm.get('title').errors['maxlength']\">Maximum length is 100.</mat-error>\n      </mat-error>\n    </mat-form-field>\n    <mat-form-field hintLabel=\"Maximum length is 100\">\n      <input type=\"text\"\n             #link\n             formControlName=\"link\"\n             placeholder=\"Link\"\n             matInput>\n      <mat-hint align=\"end\">{{link.value.length}}/100</mat-hint>\n      <mat-error *ngIf=\"!menuForm.get('link').valid && menuForm.get('link').touched\">\n        <mat-error *ngIf=\"menuForm.get('link').errors['required']\">Link is required.</mat-error>\n        <mat-error *ngIf=\"menuForm.get('link').errors['maxlength']\">Maximum length is 100.</mat-error>\n      </mat-error>\n    </mat-form-field>\n    <mat-form-field hintLabel=\"Maximum length is 100\">\n      <input type=\"text\"\n             #icon\n             formControlName=\"iconName\"\n             placeholder=\"Icon\"\n             matInput>\n      <mat-hint align=\"end\">{{icon.value.length}}/100</mat-hint>\n      <mat-error *ngIf=\"!menuForm.get('iconName').valid && menuForm.get('iconName').touched\">\n        <mat-error *ngIf=\"menuForm.get('iconName').errors['required']\">Icon is required.</mat-error>\n        <mat-error *ngIf=\"menuForm.get('iconName').errors['maxlength']\">Maximum length is 100.</mat-error>\n      </mat-error>\n    </mat-form-field>\n    <mat-form-field>\n      <input type=\"number\"\n             #sortId\n             formControlName=\"sortId\"\n             placeholder=\"Sort Id\"\n             matInput>\n      <mat-error *ngIf=\"!menuForm.get('sortId').valid && menuForm.get('sortId').touched\">\n        <mat-error *ngIf=\"menuForm.get('sortId').errors['sortId']\">Icon is required.</mat-error>\n      </mat-error>\n    </mat-form-field>\n    <mat-form-field>\n      <mat-label>Main Menu</mat-label>\n      <mat-select formControlName=\"selectedMainMenu\">\n        <mat-option *ngFor=\"let menu of mainMenus\"\n                    [value]=\"menu.id\">\n          {{menu.title}}\n        </mat-option>\n      </mat-select>\n    </mat-form-field>\n    <mat-form-field>\n      <mat-label>Role</mat-label>\n      <mat-select multiple\n                  formControlName=\"selectedUserRole\">\n        <mat-option *ngFor=\"let role of roles\"\n                    [value]=\"role.id\">\n          {{role.description}}\n        </mat-option>\n      </mat-select>\n      <mat-error *ngIf=\"!menuForm.get('selectedUserRole').valid && menuForm.get('selectedUserRole').touched\">\n        <mat-error *ngIf=\"menuForm.get('selectedUserRole').errors['required']\">Role is required.</mat-error>\n      </mat-error>\n    </mat-form-field>\n\n    <div fxLayoutAlign=\"start\">\n      <mat-checkbox formControlName='isActive'\n                    labelPosition=\"before\"\n                    color=\"primary\">Is Active</mat-checkbox>\n    </div>\n    <div fxLayout=\"row\"\n         fxLayoutGap=\"10px\">\n      <button mat-raised-button\n              [disabled]=\"!menuForm.valid\"\n              color=\"primary\"\n              type=\"submit\">Save</button>\n      <button mat-raised-button\n              type=\"button\"\n              (click)=\"onCancel()\"\n              class=\"accent\">Cancel</button>\n    </div>\n  </form>\n</section>\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { MenuService } from 'src/menu/services/menu.service';\nimport { AlertService } from 'src/_services/alert.service';\nimport { MenuListComponent } from '../menu-list/menu-list.component';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-menu-delete',\n  templateUrl: './menu-delete.component.html',\n  styleUrls: ['./menu-delete.component.css']\n})\nexport class MenuDeleteComponent implements OnInit {\n\n  constructor(\n    private menuService: MenuService,\n    private alertService: AlertService,\n    public dialogRef: MatDialogRef<MenuListComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any\n  ) { }\n  \n  ngOnInit(): void {\n  }\n\n  onDelete(id: number) {\n    this.menuService.delete(id).subscribe(\n      (data) => {\n        this.alertService.showAlert('deleted successfully.');\n        this.dialogRef.close(true);\n      },\n      (error) => {\n        this.alertService.showAlert(error);\n      });\n  }\n}\n","<h2 mat-dialog-title>Delete Confirmation?</h2>\n<mat-dialog-content class=\"mat-typography\">\n  Are you sure you want to delete {{data.title}}?\n</mat-dialog-content>\n<mat-dialog-actions align=\"end\">\n  <button mat-button\n          mat-dialog-close>Cancel</button>\n  <button mat-button\n          (click)=\"onDelete(data.id)\"\n          cdkFocusInitial>Delete</button>\n</mat-dialog-actions>\n","import { Component, OnInit, ViewChild, AfterViewInit } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatSort, Sort } from '@angular/material/sort';\nimport { MatPaginator, PageEvent } from '@angular/material/paginator';\nimport { IParam } from 'src/_models/param';\nimport { Router } from '@angular/router';\nimport { MatDialog } from '@angular/material/dialog';\nimport { AlertService } from 'src/_services/alert.service';\nimport { IMenu } from 'src/_models/menu-data';\nimport { MenuService } from 'src/menu/services/menu.service';\nimport { MenuDeleteComponent } from '../menu-delete/menu-delete.component';\n\n@Component({\n  selector: 'app-menu-list',\n  templateUrl: './menu-list.component.html',\n  styleUrls: ['./menu-list.component.css']\n})\n\nexport class MenuListComponent implements AfterViewInit, OnInit {\n\n  columnsToDisplay = ['title', 'sortId', 'link', 'mainMenuName', 'roles', 'edit', 'delete'];\n\n  data: IMenu[];\n\n  dataSource = new MatTableDataSource<IMenu>();\n\n  params: IParam = {\n    pageNumber: 1,\n    pageSize: 5\n  };\n\n  length = 1;\n  pageSizeOptions: number[] = [5, 10, 25];\n  searchList = [{ key: 1, value: 'Title' }];\n  selected = 'Title';\n\n  isLoading = true;\n\n  @ViewChild(MatSort) matSort: MatSort;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild('selectedSearchBy', { static: false }) selectedSearchBy;\n\n  constructor(\n    private matDialog: MatDialog,\n    private menuService: MenuService,\n    private alertService: AlertService,\n    private route: Router) { }\n\n  private getMenus(param: IParam) {\n    this.menuService.get(this.params).subscribe((data) => {\n      console.log('???;', data);\n      this.dataSource.data = data.menus;\n      this.length = data.totalCount;\n      this.isLoading = false;\n    }, (error) => {\n      this.alertService.showAlert(error, 'Okay', 20000);\n    });\n  }\n\n  ngOnInit(): void {\n    this.getMenus(this.params);\n  }\n\n  ngAfterViewInit() {\n    this.matSort.sortChange.subscribe((sort: Sort) => {\n      this.params.sortBy = sort.active;\n      this.params.sortDirection = sort.direction;\n      this.getMenus(this.params);\n    });\n  }\n\n  applyFilter(filteredValue: string) {\n    this.isLoading = true;\n\n    console.log(filteredValue, this.selectedSearchBy.value);\n    this.paginator.pageIndex = 0;\n\n    this.params.searchBy = this.selectedSearchBy.value;\n    this.params.searchText = filteredValue;\n    this.params.pageNumber = 1;\n    this.getMenus(this.params);\n  }\n\n  change(event: PageEvent) {\n    this.isLoading = true;\n    setTimeout(() => {\n      this.params.pageNumber = event.pageIndex + 1;\n      this.params.pageSize = event.pageSize;\n      this.getMenus(this.params);\n    }, 500);\n  }\n\n  onAddNew() {\n    this.route.navigate(['/addMenu']);\n  }\n\n  onDelete(title: string, id: number) {\n    const dialogRef = this.matDialog.open(MenuDeleteComponent, { data: { title, id } });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result === true) {\n        this.getMenus(this.params);\n      }\n    });\n  }\n\n  onView(id: number) {\n    // const dialogRef = this.matDialog.open(ViewUserComponent, { data: { id } });\n  }\n}\n","<mat-toolbar color=\"accent\">\n  <mat-toolbar-row fxLayout=\"row\"\n  fxLayoutAlign=\"space-around center\"\n  fxLayoutGap=\"10px\">\n    <div fxFlex=\"30\">\n      <span>Menu Setup</span>\n    </div>\n    <div fxFlex=\"70\" fxLayout=\"row\"\n         fxLayoutAlign=\"end center\"\n         fxLayoutGap=\"10px\">\n      <span><button mat-flat-button\n                color=\"primary\"\n                type=\"button\"\n                (click)=\"onAddNew()\"\n                matTooltip=\"Add menu\">Add New</button></span>\n      <span><button mat-flat-button\n                color=\"primary\"\n                type=\"button\"\n                (click)=\"onAddNew()\"\n                matTooltip=\"Export\">Export</button></span>\n    </div>\n  </mat-toolbar-row>\n</mat-toolbar>\n<br>\n<div fxLayout=\"row\"\n     fxLayoutAlign=\"space-evenly center\">\n  <mat-form-field fxFlex=\"20%\">\n    <mat-label>Search By</mat-label>\n    <mat-select #selectedSearchBy\n                [(value)]=\"selected\">\n      <mat-option *ngFor=\"let item of searchList\"\n                  [value]=\"item.value\">\n        {{item.value}} </mat-option>\n    </mat-select>\n  </mat-form-field>\n  <mat-form-field fxFlex=\"40%\">\n    <mat-label>Filter</mat-label>\n    <input matInput\n           (keyup)=\"applyFilter($event.target.value)\"\n           placeholder=\"\">\n  </mat-form-field>\n\n</div>\n<table mat-table\n       [dataSource]=\"dataSource\"\n       matSort>\n  <tr mat-header-row\n      *matHeaderRowDef=\"columnsToDisplay; sticky: true\"></tr>\n  <tr mat-row\n      *matRowDef=\"let myRowData; columns: columnsToDisplay\"></tr>\n  <ng-container matColumnDef=\"title\">\n    <th mat-header-cell\n        *matHeaderCellDef\n        mat-sort-header\n        [disabled]=\"isLoading\"> Title </th>\n    <td mat-cell\n        *matCellDef=\"let menu\"> {{menu.title}}</td>\n  </ng-container>\n  <ng-container matColumnDef=\"sortId\">\n    <th mat-header-cell\n        *matHeaderCellDef\n        mat-sort-header\n        [disabled]=\"isLoading\"> Sort Id </th>\n    <td mat-cell\n        *matCellDef=\"let menu\"> {{menu.sortId}}</td>\n  </ng-container>\n  <ng-container matColumnDef=\"link\">\n    <th mat-header-cell\n        *matHeaderCellDef\n        mat-sort-header\n        [disabled]=\"isLoading\"> Link </th>\n    <td mat-cell\n        *matCellDef=\"let menu\"> {{menu.link}}</td>\n  </ng-container>\n  <ng-container matColumnDef=\"mainMenuName\">\n    <th mat-header-cell\n        *matHeaderCellDef\n        mat-sort-header\n        [disabled]=\"isLoading\"> Main Menu </th>\n    <td mat-cell\n        *matCellDef=\"let menu\"> {{menu.mainMenuName}}</td>\n  </ng-container>\n  <ng-container matColumnDef=\"roles\">\n    <th mat-header-cell\n        *matHeaderCellDef>Role </th>\n    <td mat-cell\n        *matCellDef=\"let menu\">\n      <code *ngFor=\"let role of menu.roles\">{{role.description}} | </code>\n    </td>\n  </ng-container>\n  <ng-container matColumnDef=\"edit\">\n    <th mat-header-cell\n        *matHeaderCellDef>Edit</th>\n    <td mat-cell\n        *matCellDef=\"let menu\">\n      <button mat-icon-button\n              matTooltip=\"Edit or Change\"\n              matTooltipClass=\"example-tooltip-red\"\n              color=\"primary\"\n              [routerLink]=\"['/addMenu',menu.id]\"><i class=\"fa fa-edit\"></i></button>\n    </td>\n  </ng-container>\n  <ng-container matColumnDef=\"delete\">\n    <th mat-header-cell\n        *matHeaderCellDef>Delete</th>\n    <td mat-cell\n        *matCellDef=\"let menu\">\n      <button mat-icon-button\n              matTooltip=\"Delete or Remove\"\n              matTooltipClass=\"example-tooltip-red\"\n              color=\"primary\"\n              (click)=\"onDelete(menu.title, menu.id)\"><i class=\"fa fa-trash\"></i></button>\n    </td>\n  </ng-container>\n</table>\n<mat-progress-bar mode=\"indeterminate\"\n                  *ngIf=\"!!isLoading\"></mat-progress-bar>\n<mat-paginator [length]=\"length\"\n               [pageSize]=\"params.pageSize\"\n               [pageSizeOptions]=\"pageSizeOptions\"\n               (page)=\"change($event)\"\n               [disabled]=\"isLoading\">\n</mat-paginator>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MaterialModule } from 'src/app/material.module';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MenuListComponent } from './components/menu-list/menu-list.component';\nimport { MenuAddComponent } from './components/menu-add/menu-add.component';\nimport { MenuDeleteComponent } from './components/menu-delete/menu-delete.component';\n\n@NgModule({\n    declarations: [\n        MenuListComponent,\n        MenuAddComponent,\n        MenuDeleteComponent\n    ],\n    imports: [\n        CommonModule,\n        RouterModule,\n        ReactiveFormsModule,\n        MaterialModule,\n        FlexLayoutModule\n    ],\n    entryComponents: [\n        MenuDeleteComponent\n    ],\n    exports: [\n        MenuListComponent,\n        MenuAddComponent,\n        MenuDeleteComponent\n    ]\n})\nexport class MenuModule {\n}\n","import { Injectable } from '@angular/core';\nimport { Base } from 'src/_services/base';\nimport { environment } from 'src/environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { IMenu, IMenus, IMenuToSave, IMainMenu } from 'src/_models/menu-data';\nimport { IParam } from 'src/_models/param';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MenuService extends Base {\n\n  private baseUrl = environment.apiUrl;\n\n  constructor(private http: HttpClient, private router: Router) {\n    super();\n  }\n\n  getById(id: number): Observable<IMenu> {\n    console.log('id-getbyid', id);\n    if (id === 0) {\n      return new Observable((observe) => {\n        console.log('id-getbyid', id);\n\n        observe.next({\n          id: 0,\n          title: '',\n          link: '',\n          iconName: '',\n          mainMenuId: 0,\n          sortId: 0,\n          roles: [],\n          isActive: true\n        });\n      });\n    } else {\n      return this.http.get<IMenu>(this.baseUrl + 'menu\\\\' + id);\n    }\n  }\n\n  get(parameters: IParam): Observable<IMenus> {\n    const httpParams = this.getHttpParams(parameters);\n\n    console.log(parameters.sortDirection);\n\n    return this.http.get<IMenus>(this.baseUrl + 'menu', { params: httpParams });\n\n  }\n\n  getMainMenus(id: number): Observable<IMainMenu[]> {\n    return this.http.get<IMainMenu[]>(this.baseUrl + 'menu/mainmenus/' + id);\n  }\n\n  add(newMenu: IMenuToSave) {\n    console.log(newMenu);\n    return this.http.post(this.baseUrl + 'menu', newMenu);\n  }\n\n  update(id: number, newMenu: IMenuToSave) {\n    return this.http.patch(this.baseUrl + 'menu/' + id, newMenu);\n  }\n\n  delete(id: number) {\n    return this.http.delete(this.baseUrl + 'menu/' + id);\n  }\n\n}\n","import { Component, OnInit, ViewChild, AfterViewInit } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatSort, Sort } from '@angular/material/sort';\nimport { MatPaginator, PageEvent } from '@angular/material/paginator';\nimport { IParam } from 'src/_models/param';\nimport { Router } from '@angular/router';\nimport { MatDialog } from '@angular/material/dialog';\nimport { AlertService } from 'src/_services/alert.service';\nimport { IRole } from 'src/_models/role-data';\nimport { RoleService } from 'src/role/services/role.service';\n\n@Component({\n  selector: 'app-list-role',\n  templateUrl: './list-role.component.html',\n  styleUrls: ['./list-role.component.css']\n})\nexport class ListRoleComponent implements AfterViewInit, OnInit {\n\n  columnsToDisplay = ['description', 'edit', 'delete'];\n\n  data: IRole[];\n\n  dataSource = new MatTableDataSource<IRole>();\n\n  params: IParam = {\n    pageNumber: 1,\n    pageSize: 5\n  };\n\n  length = 1;\n  pageSizeOptions: number[] = [5, 10, 25];\n  searchList = [{ key: 1, value: 'Description' }];\n  selected = 'Description';\n\n  isLoading = true;\n\n  @ViewChild(MatSort) matSort: MatSort;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild('selectedSearchBy', { static: false }) selectedSearchBy;\n\n  constructor(\n    private matDialog: MatDialog,\n    private roleService: RoleService,\n    private alertService: AlertService,\n    private route: Router) { }\n\n  private getRoles(param: IParam) {\n    this.roleService.get(this.params).subscribe((data) => {\n      this.dataSource.data = data.roles;\n      this.length = data.totalCount;\n      this.isLoading = false;\n    }, (error) => {\n      this.alertService.showAlert(error, 'Okay', 20000);\n    });\n  }\n\n  ngOnInit(): void {\n    this.getRoles(this.params);\n  }\n\n  ngAfterViewInit() {\n    this.matSort.sortChange.subscribe((sort: Sort) => {\n      this.params.sortBy = sort.active;\n      this.params.sortDirection = sort.direction;\n      this.getRoles(this.params);\n    });\n  }\n\n  applyFilter(filteredValue: string) {\n    this.isLoading = true;\n\n    console.log(filteredValue, this.selectedSearchBy.value);\n    this.paginator.pageIndex = 0;\n\n    this.params.searchBy = this.selectedSearchBy.value;\n    this.params.searchText = filteredValue;\n    this.params.pageNumber = 1;\n    this.getRoles(this.params);\n  }\n\n  change(event: PageEvent) {\n    this.isLoading = true;\n    setTimeout(() => {\n      this.params.pageNumber = event.pageIndex + 1;\n      this.params.pageSize = event.pageSize;\n      this.getRoles(this.params);\n    }, 500);\n  }\n\n  onAddNew() {\n    this.route.navigate(['/addRole']);\n  }\n\n  onDelete(username: string, id: number) {\n    // const dialogRef = this.matDialog.open(DeleteUserComponent, { data: { username, id } });\n\n    // dialogRef.afterClosed().subscribe(result => {\n    //   if (result === true) {\n    //     this.getUsers(this.params);\n    //   }\n    // });\n  }\n\n  onView(id: number) {\n    // const dialogRef = this.matDialog.open(ViewUserComponent, { data: { id } });\n  }\n}\n","<mat-toolbar color=\"accent\">\n  <mat-toolbar-row fxLayout=\"row\"\n  fxLayoutAlign=\"space-around center\"\n  fxLayoutGap=\"10px\">\n    <div fxFlex=\"30\">\n      <span>Role Setup</span>\n    </div>\n    <div fxFlex=\"70\" fxLayout=\"row\"\n         fxLayoutAlign=\"end center\"\n         fxLayoutGap=\"10px\">\n      <span><button mat-flat-button\n                color=\"primary\"\n                type=\"button\"\n                (click)=\"onAddNew()\"\n                matTooltip=\"Add menu\">Add New</button></span>\n      <span><button mat-flat-button\n                color=\"primary\"\n                type=\"button\"\n                (click)=\"onAddNew()\"\n                matTooltip=\"Export\">Export</button></span>\n    </div>\n  </mat-toolbar-row>\n</mat-toolbar>\n<br>\n<div fxLayout=\"row\"\n     fxLayoutAlign=\"space-evenly center\">\n  <mat-form-field fxFlex=\"20%\">\n    <mat-label>Search By</mat-label>\n    <mat-select #selectedSearchBy\n                [(value)]=\"selected\">\n      <mat-option *ngFor=\"let item of searchList\"\n                  [value]=\"item.value\">\n        {{item.value}} </mat-option>\n    </mat-select>\n  </mat-form-field>\n  <mat-form-field fxFlex=\"40%\">\n    <mat-label>Filter</mat-label>\n    <input matInput\n           (keyup)=\"applyFilter($event.target.value)\"\n           placeholder=\"\">\n  </mat-form-field>\n\n</div>\n<table mat-table\n       [dataSource]=\"dataSource\"\n       matSort>\n  <tr mat-header-row\n      *matHeaderRowDef=\"columnsToDisplay; sticky: true\"></tr>\n  <tr mat-row\n      *matRowDef=\"let myRowData; columns: columnsToDisplay\"></tr>\n  <ng-container matColumnDef=\"description\">\n    <th mat-header-cell\n        *matHeaderCellDef\n        mat-sort-header\n        [disabled]=\"isLoading\"> Description </th>\n    <td mat-cell\n        *matCellDef=\"let role\"> <button mat-button\n              (click)=\"onView(role.id)\"\n              color=\"primary\">{{role.description}}</button> </td>\n  </ng-container>\n  <ng-container matColumnDef=\"edit\">\n    <th mat-header-cell\n        *matHeaderCellDef>Edit</th>\n    <td mat-cell\n        *matCellDef=\"let role\">\n      <button mat-icon-button\n              matTooltip=\"Edit or Change\"\n              matTooltipClass=\"example-tooltip-red\"\n              color=\"primary\"\n              [routerLink]=\"['/addRole',role.id]\"><i class=\"fa fa-edit\"></i></button>\n    </td>\n  </ng-container>\n  <ng-container matColumnDef=\"delete\">\n    <th mat-header-cell\n        *matHeaderCellDef>Delete</th>\n    <td mat-cell\n        *matCellDef=\"let role\">\n      <button mat-icon-button\n              matTooltip=\"Delete or Remove\"\n              matTooltipClass=\"example-tooltip-red\"\n              color=\"primary\"\n              (click)=\"onDelete(role.description, role.id)\"><i class=\"fa fa-trash\"></i></button>\n    </td>\n  </ng-container>\n</table>\n<mat-progress-bar mode=\"indeterminate\"\n                  *ngIf=\"!!isLoading\"></mat-progress-bar>\n<mat-paginator [length]=\"length\"\n               [pageSize]=\"params.pageSize\"\n               [pageSizeOptions]=\"pageSizeOptions\"\n               (page)=\"change($event)\"\n               [disabled]=\"isLoading\">\n</mat-paginator>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MaterialModule } from 'src/app/material.module';\nimport { ListRoleComponent } from './components/list/list-role.component';\n\n@NgModule({\n    declarations: [\n        ListRoleComponent\n    ],\n    imports: [\n        CommonModule,\n        RouterModule,\n        ReactiveFormsModule,\n        MaterialModule,\n        FlexLayoutModule\n    ],\n    entryComponents: [],\n    exports: [\n        ListRoleComponent\n    ]\n})\n\nexport class RoleModule {\n}\n","import { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { IRole, IRoles, IRoleToSave } from 'src/_models/role-data';\nimport { IParam } from 'src/_models/param';\nimport { Base } from 'src/_services/base';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RoleService extends Base {\n\n  private baseUrl = environment.apiUrl;\n\n  constructor(private http: HttpClient, private router: Router) {\n    super();\n  }\n\n  getById(id: number): Observable<IRole> {\n    if (id === 0) {\n      return new Observable((observe) => {\n        observe.next({\n          id: 0,\n          description: '',\n          isActive: true\n        });\n      });\n    } else {\n      return this.http.get<IRole>(this.baseUrl + 'role\\\\' + id);\n    }\n  }\n\n  get(parameters: IParam): Observable<IRoles> {\n    const httpParams = this.getHttpParams(parameters);\n\n    console.log(parameters.sortDirection);\n\n    return this.http.get<IRoles>(this.baseUrl + 'role', { params: httpParams });\n\n  }\n\n  add(newRole: IRoleToSave) {\n    console.log(newRole);\n    return this.http.post(this.baseUrl + 'role', newRole);\n  }\n\n  update(id: number, newRole: IRoleToSave) {\n    return this.http.patch(this.baseUrl + 'role/' + id, newRole);\n  }\n\n  delete(id: number) {\n    return this.http.delete(this.baseUrl + 'role/' + id);\n  }\n\n}\n","import { Component, OnInit, AfterViewInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { UserService } from 'src/user/services/user.service';\nimport { IUser } from 'src/_models/user-data';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { AlertService } from 'src/_services/alert.service';\nimport { IParam } from 'src/_models/param';\nimport { IRole } from 'src/_models/role-data';\nimport { RoleService } from 'src/role/services/role.service';\n\n@Component({\n  selector: 'app-add-user',\n  templateUrl: './add-user.component.html',\n  styleUrls: ['./add-user.component.css']\n})\n\nexport class AddUserComponent implements OnInit, AfterViewInit {\n\n  signUpForm: FormGroup;\n\n  roles: IRole[];\n  user: IUser;\n  id = 0;\n\n  roleParam: IParam = {};\n\n  constructor(\n    private userService: UserService,\n    private roleService: RoleService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private alertService: AlertService) { }\n\n  ngAfterViewInit(): void {\n\n  }\n\n  ngOnInit() {\n\n    this.roleService.get(this.roleParam).subscribe((data) => {\n      console.log(data);\n      this.roles = data.roles;\n    }, (error) => {\n      this.alertService.showAlert(error);\n    });\n\n    this.signUpForm = new FormGroup({\n      id: new FormControl(0),\n      name: new FormControl('',\n        [Validators.required, Validators.minLength(6), Validators.maxLength(70)]),\n      username: new FormControl('',\n        [Validators.required, Validators.minLength(6), Validators.maxLength(50)]),\n      email: new FormControl('',\n        [Validators.email, , Validators.maxLength(70), Validators.required]),\n      phone: new FormControl('', [Validators.maxLength(20)]),\n      isActive: new FormControl(true),\n      selectedUserRole: new FormControl([], [Validators.required])\n    });\n\n    this.id = this.route.snapshot.params.id;\n\n    if (this.id === undefined) {\n      this.id = 0;\n    }\n\n    this.userService.getById(this.id).subscribe(\n      (data) => {\n        this.user = data;\n      },\n      (error) => {\n        this.alertService.showAlert(error);\n      },\n      () => {\n        console.log(1, this.user);\n        this.signUpForm.get('id').setValue(this.user.id);\n        this.signUpForm.get('username').setValue(this.user.username);\n        this.signUpForm.get('name').setValue(this.user.name);\n        this.signUpForm.get('email').setValue(this.user.email);\n        this.signUpForm.get('phone').setValue(this.user.phone);\n        this.signUpForm.get('isActive').setValue(this.user.isActive);\n        const roles = [];\n        this.user.userRole.forEach(element => {\n          roles.push(element.id);\n        });\n\n        this.signUpForm.get('selectedUserRole').setValue(roles);\n      });\n\n  }\n\n  onSubmit() {\n    this.user = {\n      id: this.signUpForm.get('id').value,\n      username: this.signUpForm.get('username').value,\n      name: this.signUpForm.get('name').value,\n      email: this.signUpForm.get('email').value,\n      phone: this.signUpForm.get('phone').value,\n      isActive: this.signUpForm.get('isActive').value,\n      userRole: this.signUpForm.get('selectedUserRole').value\n    };\n    console.log('???', this.user);\n    if (this.id === 0) {\n      this.userService.add(this.user).subscribe((response) => {\n        this.router.navigate(['/user']);\n      }, (error) => {\n        this.alertService.showAlert(error);\n      });\n    } else {\n      this.userService.update(this.id, this.user).subscribe((response) => {\n        this.router.navigate(['/user']);\n      }, (error) => {\n        this.alertService.showAlert(error);\n      });\n    }\n  }\n\n  onCancel() {\n    this.router.navigate(['/user']);\n  }\n}\n","<section>\n  <form [formGroup]='signUpForm'\n        (ngSubmit)=\"onSubmit()\"\n        fxLayout=\"column\"\n        fxLayoutAlign=\"space-between center\"\n        fxLayoutGap=\"10px\">\n\n    <mat-form-field hintLabel=\"Maximum length is 70\">\n      <input type=\"text\"\n             #name\n             formControlName='name'\n             placeholder=\"Name\"\n             matInput>\n      <mat-hint align=\"end\">{{name.value.length}} /70</mat-hint>\n      <mat-error *ngIf=\"!signUpForm.get('name').valid && signUpForm.get('name').touched\">\n        <mat-error *ngIf=\"signUpForm.get('name').errors['required']\">Name is required.</mat-error>\n        <mat-error *ngIf=\"signUpForm.get('name').errors['minlength']\">Minium length is 6.</mat-error>\n        <mat-error *ngIf=\"signUpForm.get('name').errors['maxlength']\">Maximum length is 70.</mat-error>\n      </mat-error>\n    </mat-form-field>\n\n    <mat-form-field hintLabel=\"Maximum length is 50\">\n      <input type=\"text\"\n             #username\n             formControlName='username'\n             placeholder=\"Username\"\n             matInput>\n      <mat-hint align=\"end\">{{username.value.length}} /50</mat-hint>\n      <mat-error *ngIf=\"!signUpForm.get('username').valid && signUpForm.get('username').touched\">\n        <mat-error *ngIf=\"signUpForm.get('username').errors['required']\">Username is required.</mat-error>\n        <mat-error *ngIf=\"signUpForm.get('username').errors['minlength']\">Minium length is 6.</mat-error>\n        <mat-error *ngIf=\"signUpForm.get('username').errors['maxlength']\">Maximum length is 50.</mat-error>\n      </mat-error>\n    </mat-form-field>\n\n    <!-- <mat-form-field hintLabel=\"Maximum length is 50\">\n      <input type=\"password\"\n             #password\n             formControlName='password'\n             placeholder=\"Password\"\n             matInput>\n      <mat-hint align=\"end\">{{password.value.length}} /50</mat-hint>\n      <mat-error *ngIf=\"!signUpForm.get('password').valid && signUpForm.get('password').touched\">\n        <mat-error *ngIf=\"signUpForm.get('password').errors['required']\">Password is required.</mat-error>\n        <mat-error *ngIf=\"signUpForm.get('password').errors['minlength']\">Minium length is 8.</mat-error>\n        <mat-error *ngIf=\"signUpForm.get('password').errors['maxlength']\">Minium length is 50.</mat-error>\n      </mat-error>\n    </mat-form-field> -->\n\n    <mat-form-field hintLabel=\"Maximum length is 100\">\n      <input type=\"email\"\n             #email\n             formControlName='email'\n             placeholder=\"Email\"\n             matInput>\n      <mat-hint align=\"end\">{{email.value.length}} /50</mat-hint>\n      <mat-error *ngIf=\"!signUpForm.get('email').valid && signUpForm.get('email').touched\">\n        <mat-error *ngIf=\"signUpForm.get('email').errors['required']\">Email is required.</mat-error>\n        <mat-error *ngIf=\"signUpForm.get('email').errors['email']\">Valid email address is required.</mat-error>\n        <mat-error *ngIf=\"signUpForm.get('email').errors['maxlength']\">Maximum length is 100.</mat-error>\n      </mat-error>\n    </mat-form-field>\n    <mat-form-field hintLabel=\"Maximum length is 20\">\n      <input type=\"text\"\n             #phone\n             formControlName=\"phone\"\n             placeholder=\"Phone\"\n             matInput>\n      <mat-hint align=\"end\">{{phone.value.length}}/20</mat-hint>\n      <mat-error *ngIf=\"!signUpForm.get('phone').valid && signUpForm.get('phone').touched\">\n        <mat-error *ngIf=\"signUpForm.get('phone').errors['maxlength']\">Maximum length is 20.</mat-error>\n      </mat-error>\n    </mat-form-field>\n    <!-- <mat-form-field>\n      <mat-label>Active Date</mat-label>\n      <input matInput\n             [matDatepicker]=\"picker\"\n             [min]=\"minDate\">\n      <mat-datepicker-toggle matSuffix\n                             [for]=\"picker\">\n        <i class=\"fa fa-calender\"></i>\n      </mat-datepicker-toggle>\n      <mat-datepicker #picker></mat-datepicker>\n    </mat-form-field> -->\n    <mat-form-field>\n      <mat-label>Role</mat-label>\n      <mat-select multiple\n                  formControlName=\"selectedUserRole\">\n        <mat-option *ngFor=\"let role of roles\"\n                    [value]=\"role.id\">\n          {{role.description}}\n        </mat-option>\n      </mat-select>\n      <mat-error *ngIf=\"!signUpForm.get('selectedUserRole').valid && signUpForm.get('selectedUserRole').touched\">\n        <mat-error *ngIf=\"signUpForm.get('selectedUserRole').errors['required']\">Role is required.</mat-error>\n      </mat-error>\n    </mat-form-field>\n\n    <div fxLayoutAlign=\"start\">\n      <mat-checkbox formControlName='isActive'\n                    labelPosition=\"before\"\n                    color=\"primary\">Is Active</mat-checkbox>\n    </div>\n    <div fxLayout=\"row\"\n         fxLayoutGap=\"10px\">\n      <button mat-raised-button\n              [disabled]=\"!signUpForm.valid\"\n              color=\"primary\"\n              type=\"submit\">Save</button>\n      <button mat-raised-button\n              type=\"button\"\n              (click)=\"onCancel()\"\n              class=\"accent\">Cancel</button>\n    </div>\n  </form>\n</section>\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { UserService } from 'src/user/services/user.service';\nimport { AuthService } from 'src/auth/services/auth.service';\nimport { AlertService } from 'src/_services/alert.service';\nimport { MatDialogRef , MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport { ListUserComponent } from '../list/list-user.component';\n\n@Component({\n  selector: 'app-delete-user',\n  templateUrl: './delete-user.component.html',\n  styleUrls: ['./delete-user.component.css']\n})\nexport class DeleteUserComponent implements OnInit {\n\n  constructor(\n    private userService: UserService,\n    private authService: AuthService,\n    private alertService: AlertService,\n    public dialogRef: MatDialogRef<ListUserComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any) { }\n\n  ngOnInit() {\n  }\n\n  onDelete(id: number) {\n    this.userService.delete(id).subscribe(\n      (data) => {\n        this.alertService.showAlert('deleted successfully.');\n        this.dialogRef.close(true);\n      },\n      (error) => {\n        this.alertService.showAlert(error);\n      });\n  }\n\n}\n","<h2 mat-dialog-title>Delete Confirmation?</h2>\n<mat-dialog-content class=\"mat-typography\">\n  Are you sure you want to delete {{data.username}}?\n</mat-dialog-content>\n<mat-dialog-actions align=\"end\">\n  <button mat-button\n          mat-dialog-close>Cancel</button>\n  <button mat-button\n          (click)=\"onDelete(data.id)\"\n          cdkFocusInitial>Delete</button>\n</mat-dialog-actions>\n","import { Component, OnInit, ViewChild, ElementRef, AfterViewInit } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatSort, Sort } from '@angular/material/sort';\nimport { MatPaginator, PageEvent } from '@angular/material/paginator';\nimport { IUser } from 'src/_models/user-data';\nimport { UserService } from 'src/user/services/user.service';\nimport { IParam } from 'src/_models/param';\nimport { Router } from '@angular/router';\nimport { MatDialog } from '@angular/material/dialog';\nimport { DeleteUserComponent } from '../delete/delete-user.component';\nimport { AlertService } from 'src/_services/alert.service';\nimport { ViewUserComponent } from '../view/view-user.component';\n\n@Component({\n  selector: 'app-list-user',\n  templateUrl: './list-user.component.html',\n  styleUrls: ['./list-user.component.css']\n})\n\nexport class ListUserComponent implements AfterViewInit, OnInit {\n\n  columnsToDisplay = ['name', 'username', 'userRole', 'edit', 'delete'];\n\n  users: IUser[];\n\n  userDataSource = new MatTableDataSource<IUser>();\n\n  params: IParam = {\n    pageNumber: 1,\n    pageSize: 5\n  };\n\n  length = 1;\n  pageSizeOptions: number[] = [5, 10, 25];\n  searchList = [{ key: 1, value: 'Username' }, { key: 2, value: 'Name' }];\n  selected = 'Username';\n\n  isLoading = true;\n\n  @ViewChild(MatSort) matSort: MatSort;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild('selectedSearchBy', { static: false }) selectedSearchBy;\n\n  constructor(\n    private matDialog: MatDialog,\n    private userService: UserService,\n    private alertService: AlertService,\n    private route: Router) { }\n\n  private getUsers(param: IParam) {\n    this.userService.get(this.params).subscribe((data) => {\n      this.userDataSource.data = data.users;\n      this.length = data.totalCount;\n      this.isLoading = false;\n    }, (error) => {\n      this.alertService.showAlert(error, 'Okay', 20000);\n    });\n  }\n\n  ngOnInit(): void {\n    this.getUsers(this.params);\n  }\n\n  ngAfterViewInit() {\n    this.matSort.sortChange.subscribe((sort: Sort) => {\n      this.params.sortBy = sort.active;\n      this.params.sortDirection = sort.direction;\n      this.getUsers(this.params);\n    });\n  }\n\n  applyFilter(filteredValue: string) {\n    this.isLoading = true;\n\n    console.log(filteredValue, this.selectedSearchBy.value);\n    this.paginator.pageIndex = 0;\n\n    this.params.searchBy = this.selectedSearchBy.value;\n    this.params.searchText = filteredValue;\n    this.params.pageNumber = 1;\n    this.getUsers(this.params);\n  }\n\n  change(event: PageEvent) {\n    this.isLoading = true;\n    setTimeout(() => {\n      this.params.pageNumber = event.pageIndex + 1;\n      this.params.pageSize = event.pageSize;\n      this.getUsers(this.params);\n    }, 500);\n  }\n\n  onAddNew() {\n    this.route.navigate(['/addUser']);\n  }\n\n  onDelete(username: string, id: number) {\n    const dialogRef = this.matDialog.open(DeleteUserComponent, { data: { username, id } });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result === true) {\n        this.getUsers(this.params);\n      }\n    });\n  }\n\n  onView(id: number) {\n    const dialogRef = this.matDialog.open(ViewUserComponent, { data: { id } });\n  }\n}\n","<mat-toolbar color=\"accent\">\n  <mat-toolbar-row fxLayout=\"row\"\n                   fxLayoutAlign=\"space-around center\"\n                   fxLayoutGap=\"10px\">\n    <div fxFlex=\"30\">\n      <span>User Setup</span>\n    </div>\n    <div fxFlex=\"70\"\n         fxLayout=\"row\"\n         fxLayoutAlign=\"end center\"\n         fxLayoutGap=\"10px\">\n      <span><button mat-flat-button\n                color=\"primary\"\n                type=\"button\"\n                (click)=\"onAddNew()\"\n                matTooltip=\"Add menu\">Add New</button></span>\n      <span><button mat-flat-button\n                color=\"primary\"\n                type=\"button\"\n                (click)=\"onAddNew()\"\n                matTooltip=\"Export\">Export</button></span>\n    </div>\n  </mat-toolbar-row>\n</mat-toolbar>\n<br>\n<div fxLayout=\"row\"\n     fxLayoutAlign=\"space-evenly center\">\n  <mat-form-field fxFlex=\"20%\">\n    <mat-label>Search By</mat-label>\n    <mat-select #selectedSearchBy\n                [(value)]=\"selected\">\n      <mat-option *ngFor=\"let item of searchList\"\n                  [value]=\"item.value\">\n        {{item.value}} </mat-option>\n    </mat-select>\n  </mat-form-field>\n  <mat-form-field fxFlex=\"40%\">\n    <mat-label>Filter</mat-label>\n    <input matInput\n           (keyup)=\"applyFilter($event.target.value)\"\n           placeholder=\"\">\n  </mat-form-field>\n\n</div>\n<table mat-table\n       [dataSource]=\"userDataSource\"\n       matSort>\n  <tr mat-header-row\n      *matHeaderRowDef=\"columnsToDisplay; sticky: true\"></tr>\n  <tr mat-row\n      *matRowDef=\"let myRowData; columns: columnsToDisplay\"></tr>\n  <ng-container matColumnDef=\"name\">\n    <th mat-header-cell\n        *matHeaderCellDef\n        mat-sort-header\n        [disabled]=\"isLoading\"> Name </th>\n    <td mat-cell\n        *matCellDef=\"let user\"> <button mat-button\n              (click)=\"onView(user.id)\"\n              color=\"primary\">{{user.name}}</button> </td>\n  </ng-container>\n  <ng-container matColumnDef=\"username\">\n    <th mat-header-cell\n        *matHeaderCellDef\n        mat-sort-header\n        [disabled]=\"isLoading\">Username </th>\n    <td mat-cell\n        *matCellDef=\"let user\"> {{user.username}} </td>\n  </ng-container>\n  <ng-container matColumnDef=\"userRole\">\n    <th mat-header-cell\n        *matHeaderCellDef>Role </th>\n    <td mat-cell\n        *matCellDef=\"let user\">\n      <code *ngFor=\"let role of user.userRole\">{{role.description}} | </code>\n    </td>\n  </ng-container>\n  <ng-container matColumnDef=\"edit\">\n    <th mat-header-cell\n        *matHeaderCellDef>Edit</th>\n    <td mat-cell\n        *matCellDef=\"let user\">\n      <button mat-icon-button\n              matTooltip=\"Edit or Change\"\n              matTooltipClass=\"example-tooltip-red\"\n              color=\"primary\"\n              [routerLink]=\"['/addUser',user.id]\"><i class=\"fa fa-edit\"></i></button>\n    </td>\n  </ng-container>\n  <ng-container matColumnDef=\"delete\">\n    <th mat-header-cell\n        *matHeaderCellDef>Delete</th>\n    <td mat-cell\n        *matCellDef=\"let user\">\n      <button mat-icon-button\n              matTooltip=\"Delete or Remove\"\n              matTooltipClass=\"example-tooltip-red\"\n              color=\"primary\"\n              (click)=\"onDelete(user.username, user.id)\"><i class=\"fa fa-trash\"></i></button>\n    </td>\n  </ng-container>\n</table>\n<mat-progress-bar mode=\"indeterminate\"\n                  *ngIf=\"!!isLoading\"></mat-progress-bar>\n<mat-paginator [length]=\"length\"\n               [pageSize]=\"params.pageSize\"\n               [pageSizeOptions]=\"pageSizeOptions\"\n               (page)=\"change($event)\"\n               [disabled]=\"isLoading\">\n</mat-paginator>\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { UserService } from 'src/user/services/user.service';\nimport { RouterLink, ActivatedRoute } from '@angular/router';\nimport { IUser } from 'src/_models/user-data';\nimport { AlertService } from 'src/_services/alert.service';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-view-user',\n  templateUrl: './view-user.component.html',\n  styleUrls: ['./view-user.component.css']\n})\nexport class ViewUserComponent implements OnInit {\n\n  id = 0;\n  user: IUser;\n\n  constructor(\n    private userService: UserService,\n    private route: ActivatedRoute,\n    private alertService: AlertService,\n    @Inject(MAT_DIALOG_DATA) public data: any\n  ) {\n    this.id = data.id;\n   }\n\n  ngOnInit() {\n    console.log(this.id);\n\n    if (this.id === undefined) {\n      this.id = 0;\n    }\n\n    this.userService.getById(this.id).subscribe(\n      (data) => {\n        this.user = data;\n      },\n      (error) => {\n        this.alertService.showAlert(error);\n      },\n      () => {\n        console.log(this.user);\n      });\n  }\n\n}\n","<h1 mat-dialog-title>Detail of {{user?.name}}</h1>\n<div mat-dialog-content>\n  <div>\n    Name: {{user?.name}} <br>\n    Username: {{user?.username}}<br>\n    Phone: {{user?.phone}}<br>\n    Email: {{user?.email}}<br>\n  </div>\n</div>\n<div mat-dialog-actions>\n  <button mat-button mat-dialog-close>Close</button>\n</div>","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { environment } from 'src/environments/environment';\nimport { Observable } from 'rxjs';\nimport { IUsers, IUserToSave, IUser, IChangePassword } from 'src/_models/user-data';\nimport { IParam } from 'src/_models/param';\nimport { Base } from '../../_services/base';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService extends Base{\n\n  private baseUrl = environment.apiUrl;\n\n  constructor(private http: HttpClient, private router: Router) {\n    super();\n  }\n\n  getById(id: number): Observable<IUser> {\n    if (id === 0) {\n      const user: IUser = {\n        id: 0,\n        name: '',\n        username: '',\n        email: '',\n        userRole: [],\n        isActive: true\n      };\n      return new Observable((observe) => {\n        observe.next(user);\n      });\n    } else {\n      return this.http.get<IUser>(this.baseUrl + 'user\\\\' + id);\n    }\n  }\n\n  get(parameters: IParam): Observable<IUsers> {\n    const httpParams = this.getHttpParams(parameters);\n    return this.http.get<IUsers>(this.baseUrl + 'user', { params: httpParams });\n  }\n\n  add(newUser: IUserToSave) {\n    console.log(newUser);\n    return this.http.post(this.baseUrl + 'user', newUser);\n  }\n\n  update(id: number, newUser: IUserToSave) {\n    return this.http.patch(this.baseUrl + 'user/' + id, newUser);\n  }\n\n  delete(id: number) {\n    return this.http.delete(this.baseUrl + 'user/' + id);\n  }\n\n  changePassword(changePassword: IChangePassword) {\n    console.log(changePassword);\n    return this.http.post(this.baseUrl + 'user/changepassword', changePassword);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\n\nimport { ListUserComponent } from './components/list/list-user.component';\nimport { AddUserComponent } from './components/add/add-user.component';\nimport { ViewUserComponent } from './components/view/view-user.component';\nimport { DeleteUserComponent } from './components/delete/delete-user.component';\nimport { MaterialModule } from 'src/app/material.module';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\n@NgModule({\n    declarations: [\n        ListUserComponent,\n        AddUserComponent,\n        DeleteUserComponent,\n        ViewUserComponent\n    ],\n    imports: [CommonModule,\n        ReactiveFormsModule,\n        RouterModule,\n        MaterialModule,\n        FlexLayoutModule],\n    entryComponents: [DeleteUserComponent],\n    exports: [\n        ListUserComponent,\n        AddUserComponent,\n        DeleteUserComponent,\n        ViewUserComponent\n    ]\n})\nexport class UserModule { }\n"]}